import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { Readable } from "stream";
import { LambdaServiceException as __BaseException } from "./LambdaServiceException";
export interface AccountLimit {
  TotalCodeSize?: number;
  CodeSizeUnzipped?: number;
  CodeSizeZipped?: number;
  ConcurrentExecutions?: number;
  UnreservedConcurrentExecutions?: number;
}
export interface AccountUsage {
  TotalCodeSize?: number;
  FunctionCount?: number;
}
export interface AddLayerVersionPermissionRequest {
  LayerName: string | undefined;
  VersionNumber: number | undefined;
  StatementId: string | undefined;
  Action: string | undefined;
  Principal: string | undefined;
  OrganizationId?: string;
  RevisionId?: string;
}
export interface AddLayerVersionPermissionResponse {
  Statement?: string;
  RevisionId?: string;
}
export declare class InvalidParameterValueException extends __BaseException {
  readonly name: "InvalidParameterValueException";
  readonly $fault: "client";
  Type?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidParameterValueException, __BaseException>
  );
}
export declare class PolicyLengthExceededException extends __BaseException {
  readonly name: "PolicyLengthExceededException";
  readonly $fault: "client";
  Type?: string;
  constructor(
    opts: __ExceptionOptionType<PolicyLengthExceededException, __BaseException>
  );
}
export declare class PreconditionFailedException extends __BaseException {
  readonly name: "PreconditionFailedException";
  readonly $fault: "client";
  Type?: string;
  constructor(
    opts: __ExceptionOptionType<PreconditionFailedException, __BaseException>
  );
}
export declare class ResourceConflictException extends __BaseException {
  readonly name: "ResourceConflictException";
  readonly $fault: "client";
  Type?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceConflictException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceException extends __BaseException {
  readonly name: "ServiceException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  constructor(opts: __ExceptionOptionType<ServiceException, __BaseException>);
}
export declare enum ThrottleReason {
  CallerRateLimitExceeded = "CallerRateLimitExceeded",
  ConcurrentInvocationLimitExceeded = "ConcurrentInvocationLimitExceeded",
  ConcurrentSnapshotCreateLimitExceeded = "ConcurrentSnapshotCreateLimitExceeded",
  FunctionInvocationRateLimitExceeded = "FunctionInvocationRateLimitExceeded",
  ReservedFunctionConcurrentInvocationLimitExceeded = "ReservedFunctionConcurrentInvocationLimitExceeded",
  ReservedFunctionInvocationRateLimitExceeded = "ReservedFunctionInvocationRateLimitExceeded",
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  retryAfterSeconds?: string;
  Type?: string;
  Reason?: ThrottleReason | string;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export declare enum FunctionUrlAuthType {
  AWS_IAM = "AWS_IAM",
  NONE = "NONE",
}
export interface AddPermissionRequest {
  FunctionName: string | undefined;
  StatementId: string | undefined;
  Action: string | undefined;
  Principal: string | undefined;
  SourceArn?: string;
  SourceAccount?: string;
  EventSourceToken?: string;
  Qualifier?: string;
  RevisionId?: string;
  PrincipalOrgID?: string;
  FunctionUrlAuthType?: FunctionUrlAuthType | string;
}
export interface AddPermissionResponse {
  Statement?: string;
}
export interface AliasRoutingConfiguration {
  AdditionalVersionWeights?: Record<string, number>;
}
export interface AliasConfiguration {
  AliasArn?: string;
  Name?: string;
  FunctionVersion?: string;
  Description?: string;
  RoutingConfig?: AliasRoutingConfiguration;
  RevisionId?: string;
}
export interface AllowedPublishers {
  SigningProfileVersionArns: string[] | undefined;
}
export interface AmazonManagedKafkaEventSourceConfig {
  ConsumerGroupId?: string;
}
export declare enum Architecture {
  arm64 = "arm64",
  x86_64 = "x86_64",
}
export interface CreateAliasRequest {
  FunctionName: string | undefined;
  Name: string | undefined;
  FunctionVersion: string | undefined;
  Description?: string;
  RoutingConfig?: AliasRoutingConfiguration;
}
export declare enum CodeSigningPolicy {
  Enforce = "Enforce",
  Warn = "Warn",
}
export interface CodeSigningPolicies {
  UntrustedArtifactOnDeployment?: CodeSigningPolicy | string;
}
export interface CreateCodeSigningConfigRequest {
  Description?: string;
  AllowedPublishers: AllowedPublishers | undefined;
  CodeSigningPolicies?: CodeSigningPolicies;
}
export interface CodeSigningConfig {
  CodeSigningConfigId: string | undefined;
  CodeSigningConfigArn: string | undefined;
  Description?: string;
  AllowedPublishers: AllowedPublishers | undefined;
  CodeSigningPolicies: CodeSigningPolicies | undefined;
  LastModified: string | undefined;
}
export interface CreateCodeSigningConfigResponse {
  CodeSigningConfig: CodeSigningConfig | undefined;
}
export interface OnFailure {
  Destination?: string;
}
export interface OnSuccess {
  Destination?: string;
}
export interface DestinationConfig {
  OnSuccess?: OnSuccess;
  OnFailure?: OnFailure;
}
export declare enum FullDocument {
  Default = "Default",
  UpdateLookup = "UpdateLookup",
}
export interface DocumentDBEventSourceConfig {
  DatabaseName?: string;
  CollectionName?: string;
  FullDocument?: FullDocument | string;
}
export interface Filter {
  Pattern?: string;
}
export interface FilterCriteria {
  Filters?: Filter[];
}
export declare enum FunctionResponseType {
  ReportBatchItemFailures = "ReportBatchItemFailures",
}
export interface ScalingConfig {
  MaximumConcurrency?: number;
}
export declare enum EndPointType {
  KAFKA_BOOTSTRAP_SERVERS = "KAFKA_BOOTSTRAP_SERVERS",
}
export interface SelfManagedEventSource {
  Endpoints?: Record<string, string[]>;
}
export interface SelfManagedKafkaEventSourceConfig {
  ConsumerGroupId?: string;
}
export declare enum SourceAccessType {
  BASIC_AUTH = "BASIC_AUTH",
  CLIENT_CERTIFICATE_TLS_AUTH = "CLIENT_CERTIFICATE_TLS_AUTH",
  SASL_SCRAM_256_AUTH = "SASL_SCRAM_256_AUTH",
  SASL_SCRAM_512_AUTH = "SASL_SCRAM_512_AUTH",
  SERVER_ROOT_CA_CERTIFICATE = "SERVER_ROOT_CA_CERTIFICATE",
  VIRTUAL_HOST = "VIRTUAL_HOST",
  VPC_SECURITY_GROUP = "VPC_SECURITY_GROUP",
  VPC_SUBNET = "VPC_SUBNET",
}
export interface SourceAccessConfiguration {
  Type?: SourceAccessType | string;
  URI?: string;
}
export declare enum EventSourcePosition {
  AT_TIMESTAMP = "AT_TIMESTAMP",
  LATEST = "LATEST",
  TRIM_HORIZON = "TRIM_HORIZON",
}
export interface CreateEventSourceMappingRequest {
  EventSourceArn?: string;
  FunctionName: string | undefined;
  Enabled?: boolean;
  BatchSize?: number;
  FilterCriteria?: FilterCriteria;
  MaximumBatchingWindowInSeconds?: number;
  ParallelizationFactor?: number;
  StartingPosition?: EventSourcePosition | string;
  StartingPositionTimestamp?: Date;
  DestinationConfig?: DestinationConfig;
  MaximumRecordAgeInSeconds?: number;
  BisectBatchOnFunctionError?: boolean;
  MaximumRetryAttempts?: number;
  TumblingWindowInSeconds?: number;
  Topics?: string[];
  Queues?: string[];
  SourceAccessConfigurations?: SourceAccessConfiguration[];
  SelfManagedEventSource?: SelfManagedEventSource;
  FunctionResponseTypes?: (FunctionResponseType | string)[];
  AmazonManagedKafkaEventSourceConfig?: AmazonManagedKafkaEventSourceConfig;
  SelfManagedKafkaEventSourceConfig?: SelfManagedKafkaEventSourceConfig;
  ScalingConfig?: ScalingConfig;
  DocumentDBEventSourceConfig?: DocumentDBEventSourceConfig;
}
export interface EventSourceMappingConfiguration {
  UUID?: string;
  StartingPosition?: EventSourcePosition | string;
  StartingPositionTimestamp?: Date;
  BatchSize?: number;
  MaximumBatchingWindowInSeconds?: number;
  ParallelizationFactor?: number;
  EventSourceArn?: string;
  FilterCriteria?: FilterCriteria;
  FunctionArn?: string;
  LastModified?: Date;
  LastProcessingResult?: string;
  State?: string;
  StateTransitionReason?: string;
  DestinationConfig?: DestinationConfig;
  Topics?: string[];
  Queues?: string[];
  SourceAccessConfigurations?: SourceAccessConfiguration[];
  SelfManagedEventSource?: SelfManagedEventSource;
  MaximumRecordAgeInSeconds?: number;
  BisectBatchOnFunctionError?: boolean;
  MaximumRetryAttempts?: number;
  TumblingWindowInSeconds?: number;
  FunctionResponseTypes?: (FunctionResponseType | string)[];
  AmazonManagedKafkaEventSourceConfig?: AmazonManagedKafkaEventSourceConfig;
  SelfManagedKafkaEventSourceConfig?: SelfManagedKafkaEventSourceConfig;
  ScalingConfig?: ScalingConfig;
  DocumentDBEventSourceConfig?: DocumentDBEventSourceConfig;
}
export declare class CodeSigningConfigNotFoundException extends __BaseException {
  readonly name: "CodeSigningConfigNotFoundException";
  readonly $fault: "client";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      CodeSigningConfigNotFoundException,
      __BaseException
    >
  );
}
export declare class CodeStorageExceededException extends __BaseException {
  readonly name: "CodeStorageExceededException";
  readonly $fault: "client";
  Type?: string;
  constructor(
    opts: __ExceptionOptionType<CodeStorageExceededException, __BaseException>
  );
}
export declare class CodeVerificationFailedException extends __BaseException {
  readonly name: "CodeVerificationFailedException";
  readonly $fault: "client";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      CodeVerificationFailedException,
      __BaseException
    >
  );
}
export interface FunctionCode {
  ZipFile?: Uint8Array;
  S3Bucket?: string;
  S3Key?: string;
  S3ObjectVersion?: string;
  ImageUri?: string;
}
export interface DeadLetterConfig {
  TargetArn?: string;
}
export interface Environment {
  Variables?: Record<string, string>;
}
export interface EphemeralStorage {
  Size: number | undefined;
}
export interface FileSystemConfig {
  Arn: string | undefined;
  LocalMountPath: string | undefined;
}
export interface ImageConfig {
  EntryPoint?: string[];
  Command?: string[];
  WorkingDirectory?: string;
}
export declare enum PackageType {
  Image = "Image",
  Zip = "Zip",
}
export declare enum Runtime {
  dotnet6 = "dotnet6",
  dotnetcore10 = "dotnetcore1.0",
  dotnetcore20 = "dotnetcore2.0",
  dotnetcore21 = "dotnetcore2.1",
  dotnetcore31 = "dotnetcore3.1",
  go1x = "go1.x",
  java11 = "java11",
  java8 = "java8",
  java8al2 = "java8.al2",
  nodejs = "nodejs",
  nodejs10x = "nodejs10.x",
  nodejs12x = "nodejs12.x",
  nodejs14x = "nodejs14.x",
  nodejs16x = "nodejs16.x",
  nodejs18x = "nodejs18.x",
  nodejs43 = "nodejs4.3",
  nodejs43edge = "nodejs4.3-edge",
  nodejs610 = "nodejs6.10",
  nodejs810 = "nodejs8.10",
  provided = "provided",
  providedal2 = "provided.al2",
  python27 = "python2.7",
  python36 = "python3.6",
  python37 = "python3.7",
  python38 = "python3.8",
  python39 = "python3.9",
  ruby25 = "ruby2.5",
  ruby27 = "ruby2.7",
}
export declare enum SnapStartApplyOn {
  None = "None",
  PublishedVersions = "PublishedVersions",
}
export interface SnapStart {
  ApplyOn?: SnapStartApplyOn | string;
}
export declare enum TracingMode {
  Active = "Active",
  PassThrough = "PassThrough",
}
export interface TracingConfig {
  Mode?: TracingMode | string;
}
export interface VpcConfig {
  SubnetIds?: string[];
  SecurityGroupIds?: string[];
}
export interface CreateFunctionRequest {
  FunctionName: string | undefined;
  Runtime?: Runtime | string;
  Role: string | undefined;
  Handler?: string;
  Code: FunctionCode | undefined;
  Description?: string;
  Timeout?: number;
  MemorySize?: number;
  Publish?: boolean;
  VpcConfig?: VpcConfig;
  PackageType?: PackageType | string;
  DeadLetterConfig?: DeadLetterConfig;
  Environment?: Environment;
  KMSKeyArn?: string;
  TracingConfig?: TracingConfig;
  Tags?: Record<string, string>;
  Layers?: string[];
  FileSystemConfigs?: FileSystemConfig[];
  ImageConfig?: ImageConfig;
  CodeSigningConfigArn?: string;
  Architectures?: (Architecture | string)[];
  EphemeralStorage?: EphemeralStorage;
  SnapStart?: SnapStart;
}
export interface EnvironmentError {
  ErrorCode?: string;
  Message?: string;
}
export interface EnvironmentResponse {
  Variables?: Record<string, string>;
  Error?: EnvironmentError;
}
export interface ImageConfigError {
  ErrorCode?: string;
  Message?: string;
}
export interface ImageConfigResponse {
  ImageConfig?: ImageConfig;
  Error?: ImageConfigError;
}
export declare enum LastUpdateStatus {
  Failed = "Failed",
  InProgress = "InProgress",
  Successful = "Successful",
}
export declare enum LastUpdateStatusReasonCode {
  DisabledKMSKey = "DisabledKMSKey",
  EFSIOError = "EFSIOError",
  EFSMountConnectivityError = "EFSMountConnectivityError",
  EFSMountFailure = "EFSMountFailure",
  EFSMountTimeout = "EFSMountTimeout",
  EniLimitExceeded = "EniLimitExceeded",
  FunctionError = "FunctionError",
  ImageAccessDenied = "ImageAccessDenied",
  ImageDeleted = "ImageDeleted",
  InsufficientRolePermissions = "InsufficientRolePermissions",
  InternalError = "InternalError",
  InvalidConfiguration = "InvalidConfiguration",
  InvalidImage = "InvalidImage",
  InvalidRuntime = "InvalidRuntime",
  InvalidSecurityGroup = "InvalidSecurityGroup",
  InvalidStateKMSKey = "InvalidStateKMSKey",
  InvalidSubnet = "InvalidSubnet",
  InvalidZipFileException = "InvalidZipFileException",
  KMSKeyAccessDenied = "KMSKeyAccessDenied",
  KMSKeyNotFound = "KMSKeyNotFound",
  SubnetOutOfIPAddresses = "SubnetOutOfIPAddresses",
}
export interface Layer {
  Arn?: string;
  CodeSize?: number;
  SigningProfileVersionArn?: string;
  SigningJobArn?: string;
}
export interface RuntimeVersionError {
  ErrorCode?: string;
  Message?: string;
}
export interface RuntimeVersionConfig {
  RuntimeVersionArn?: string;
  Error?: RuntimeVersionError;
}
export declare enum SnapStartOptimizationStatus {
  Off = "Off",
  On = "On",
}
export interface SnapStartResponse {
  ApplyOn?: SnapStartApplyOn | string;
  OptimizationStatus?: SnapStartOptimizationStatus | string;
}
export declare enum State {
  Active = "Active",
  Failed = "Failed",
  Inactive = "Inactive",
  Pending = "Pending",
}
export declare enum StateReasonCode {
  Creating = "Creating",
  DisabledKMSKey = "DisabledKMSKey",
  EFSIOError = "EFSIOError",
  EFSMountConnectivityError = "EFSMountConnectivityError",
  EFSMountFailure = "EFSMountFailure",
  EFSMountTimeout = "EFSMountTimeout",
  EniLimitExceeded = "EniLimitExceeded",
  FunctionError = "FunctionError",
  Idle = "Idle",
  ImageAccessDenied = "ImageAccessDenied",
  ImageDeleted = "ImageDeleted",
  InsufficientRolePermissions = "InsufficientRolePermissions",
  InternalError = "InternalError",
  InvalidConfiguration = "InvalidConfiguration",
  InvalidImage = "InvalidImage",
  InvalidRuntime = "InvalidRuntime",
  InvalidSecurityGroup = "InvalidSecurityGroup",
  InvalidStateKMSKey = "InvalidStateKMSKey",
  InvalidSubnet = "InvalidSubnet",
  InvalidZipFileException = "InvalidZipFileException",
  KMSKeyAccessDenied = "KMSKeyAccessDenied",
  KMSKeyNotFound = "KMSKeyNotFound",
  Restoring = "Restoring",
  SubnetOutOfIPAddresses = "SubnetOutOfIPAddresses",
}
export interface TracingConfigResponse {
  Mode?: TracingMode | string;
}
export interface VpcConfigResponse {
  SubnetIds?: string[];
  SecurityGroupIds?: string[];
  VpcId?: string;
}
export interface FunctionConfiguration {
  FunctionName?: string;
  FunctionArn?: string;
  Runtime?: Runtime | string;
  Role?: string;
  Handler?: string;
  CodeSize?: number;
  Description?: string;
  Timeout?: number;
  MemorySize?: number;
  LastModified?: string;
  CodeSha256?: string;
  Version?: string;
  VpcConfig?: VpcConfigResponse;
  DeadLetterConfig?: DeadLetterConfig;
  Environment?: EnvironmentResponse;
  KMSKeyArn?: string;
  TracingConfig?: TracingConfigResponse;
  MasterArn?: string;
  RevisionId?: string;
  Layers?: Layer[];
  State?: State | string;
  StateReason?: string;
  StateReasonCode?: StateReasonCode | string;
  LastUpdateStatus?: LastUpdateStatus | string;
  LastUpdateStatusReason?: string;
  LastUpdateStatusReasonCode?: LastUpdateStatusReasonCode | string;
  FileSystemConfigs?: FileSystemConfig[];
  PackageType?: PackageType | string;
  ImageConfigResponse?: ImageConfigResponse;
  SigningProfileVersionArn?: string;
  SigningJobArn?: string;
  Architectures?: (Architecture | string)[];
  EphemeralStorage?: EphemeralStorage;
  SnapStart?: SnapStartResponse;
  RuntimeVersionConfig?: RuntimeVersionConfig;
}
export declare class InvalidCodeSignatureException extends __BaseException {
  readonly name: "InvalidCodeSignatureException";
  readonly $fault: "client";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidCodeSignatureException, __BaseException>
  );
}
export interface Cors {
  AllowCredentials?: boolean;
  AllowHeaders?: string[];
  AllowMethods?: string[];
  AllowOrigins?: string[];
  ExposeHeaders?: string[];
  MaxAge?: number;
}
export interface CreateFunctionUrlConfigRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
  AuthType: FunctionUrlAuthType | string | undefined;
  Cors?: Cors;
}
export interface CreateFunctionUrlConfigResponse {
  FunctionUrl: string | undefined;
  FunctionArn: string | undefined;
  AuthType: FunctionUrlAuthType | string | undefined;
  Cors?: Cors;
  CreationTime: string | undefined;
}
export interface DeleteAliasRequest {
  FunctionName: string | undefined;
  Name: string | undefined;
}
export interface DeleteCodeSigningConfigRequest {
  CodeSigningConfigArn: string | undefined;
}
export interface DeleteCodeSigningConfigResponse {}
export interface DeleteEventSourceMappingRequest {
  UUID: string | undefined;
}
export declare class ResourceInUseException extends __BaseException {
  readonly name: "ResourceInUseException";
  readonly $fault: "client";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceInUseException, __BaseException>
  );
}
export interface DeleteFunctionRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
}
export interface DeleteFunctionCodeSigningConfigRequest {
  FunctionName: string | undefined;
}
export interface DeleteFunctionConcurrencyRequest {
  FunctionName: string | undefined;
}
export interface DeleteFunctionEventInvokeConfigRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
}
export interface DeleteFunctionUrlConfigRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
}
export interface DeleteLayerVersionRequest {
  LayerName: string | undefined;
  VersionNumber: number | undefined;
}
export interface DeleteProvisionedConcurrencyConfigRequest {
  FunctionName: string | undefined;
  Qualifier: string | undefined;
}
export interface GetAccountSettingsRequest {}
export interface GetAccountSettingsResponse {
  AccountLimit?: AccountLimit;
  AccountUsage?: AccountUsage;
}
export interface GetAliasRequest {
  FunctionName: string | undefined;
  Name: string | undefined;
}
export interface GetCodeSigningConfigRequest {
  CodeSigningConfigArn: string | undefined;
}
export interface GetCodeSigningConfigResponse {
  CodeSigningConfig: CodeSigningConfig | undefined;
}
export interface GetEventSourceMappingRequest {
  UUID: string | undefined;
}
export interface GetFunctionRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
}
export interface FunctionCodeLocation {
  RepositoryType?: string;
  Location?: string;
  ImageUri?: string;
  ResolvedImageUri?: string;
}
export interface Concurrency {
  ReservedConcurrentExecutions?: number;
}
export interface GetFunctionResponse {
  Configuration?: FunctionConfiguration;
  Code?: FunctionCodeLocation;
  Tags?: Record<string, string>;
  Concurrency?: Concurrency;
}
export interface GetFunctionCodeSigningConfigRequest {
  FunctionName: string | undefined;
}
export interface GetFunctionCodeSigningConfigResponse {
  CodeSigningConfigArn: string | undefined;
  FunctionName: string | undefined;
}
export interface GetFunctionConcurrencyRequest {
  FunctionName: string | undefined;
}
export interface GetFunctionConcurrencyResponse {
  ReservedConcurrentExecutions?: number;
}
export interface GetFunctionConfigurationRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
}
export interface FunctionEventInvokeConfig {
  LastModified?: Date;
  FunctionArn?: string;
  MaximumRetryAttempts?: number;
  MaximumEventAgeInSeconds?: number;
  DestinationConfig?: DestinationConfig;
}
export interface GetFunctionEventInvokeConfigRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
}
export interface GetFunctionUrlConfigRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
}
export interface GetFunctionUrlConfigResponse {
  FunctionUrl: string | undefined;
  FunctionArn: string | undefined;
  AuthType: FunctionUrlAuthType | string | undefined;
  Cors?: Cors;
  CreationTime: string | undefined;
  LastModifiedTime: string | undefined;
}
export interface GetLayerVersionRequest {
  LayerName: string | undefined;
  VersionNumber: number | undefined;
}
export interface LayerVersionContentOutput {
  Location?: string;
  CodeSha256?: string;
  CodeSize?: number;
  SigningProfileVersionArn?: string;
  SigningJobArn?: string;
}
export interface GetLayerVersionResponse {
  Content?: LayerVersionContentOutput;
  LayerArn?: string;
  LayerVersionArn?: string;
  Description?: string;
  CreatedDate?: string;
  Version?: number;
  CompatibleRuntimes?: (Runtime | string)[];
  LicenseInfo?: string;
  CompatibleArchitectures?: (Architecture | string)[];
}
export interface GetLayerVersionByArnRequest {
  Arn: string | undefined;
}
export interface GetLayerVersionPolicyRequest {
  LayerName: string | undefined;
  VersionNumber: number | undefined;
}
export interface GetLayerVersionPolicyResponse {
  Policy?: string;
  RevisionId?: string;
}
export interface GetPolicyRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
}
export interface GetPolicyResponse {
  Policy?: string;
  RevisionId?: string;
}
export interface GetProvisionedConcurrencyConfigRequest {
  FunctionName: string | undefined;
  Qualifier: string | undefined;
}
export declare enum ProvisionedConcurrencyStatusEnum {
  FAILED = "FAILED",
  IN_PROGRESS = "IN_PROGRESS",
  READY = "READY",
}
export interface GetProvisionedConcurrencyConfigResponse {
  RequestedProvisionedConcurrentExecutions?: number;
  AvailableProvisionedConcurrentExecutions?: number;
  AllocatedProvisionedConcurrentExecutions?: number;
  Status?: ProvisionedConcurrencyStatusEnum | string;
  StatusReason?: string;
  LastModified?: string;
}
export declare class ProvisionedConcurrencyConfigNotFoundException extends __BaseException {
  readonly name: "ProvisionedConcurrencyConfigNotFoundException";
  readonly $fault: "client";
  Type?: string;
  constructor(
    opts: __ExceptionOptionType<
      ProvisionedConcurrencyConfigNotFoundException,
      __BaseException
    >
  );
}
export interface GetRuntimeManagementConfigRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
}
export declare enum UpdateRuntimeOn {
  Auto = "Auto",
  FunctionUpdate = "FunctionUpdate",
  Manual = "Manual",
}
export interface GetRuntimeManagementConfigResponse {
  UpdateRuntimeOn?: UpdateRuntimeOn | string;
  RuntimeVersionArn?: string;
  FunctionArn?: string;
}
export declare class EC2AccessDeniedException extends __BaseException {
  readonly name: "EC2AccessDeniedException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<EC2AccessDeniedException, __BaseException>
  );
}
export declare class EC2ThrottledException extends __BaseException {
  readonly name: "EC2ThrottledException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<EC2ThrottledException, __BaseException>
  );
}
export declare class EC2UnexpectedException extends __BaseException {
  readonly name: "EC2UnexpectedException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  EC2ErrorCode?: string;
  constructor(
    opts: __ExceptionOptionType<EC2UnexpectedException, __BaseException>
  );
}
export declare class EFSIOException extends __BaseException {
  readonly name: "EFSIOException";
  readonly $fault: "client";
  Type?: string;
  Message?: string;
  constructor(opts: __ExceptionOptionType<EFSIOException, __BaseException>);
}
export declare class EFSMountConnectivityException extends __BaseException {
  readonly name: "EFSMountConnectivityException";
  readonly $fault: "client";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<EFSMountConnectivityException, __BaseException>
  );
}
export declare class EFSMountFailureException extends __BaseException {
  readonly name: "EFSMountFailureException";
  readonly $fault: "client";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<EFSMountFailureException, __BaseException>
  );
}
export declare class EFSMountTimeoutException extends __BaseException {
  readonly name: "EFSMountTimeoutException";
  readonly $fault: "client";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<EFSMountTimeoutException, __BaseException>
  );
}
export declare class ENILimitReachedException extends __BaseException {
  readonly name: "ENILimitReachedException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ENILimitReachedException, __BaseException>
  );
}
export declare class InvalidRequestContentException extends __BaseException {
  readonly name: "InvalidRequestContentException";
  readonly $fault: "client";
  Type?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidRequestContentException, __BaseException>
  );
}
export declare class InvalidRuntimeException extends __BaseException {
  readonly name: "InvalidRuntimeException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidRuntimeException, __BaseException>
  );
}
export declare class InvalidSecurityGroupIDException extends __BaseException {
  readonly name: "InvalidSecurityGroupIDException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      InvalidSecurityGroupIDException,
      __BaseException
    >
  );
}
export declare class InvalidSubnetIDException extends __BaseException {
  readonly name: "InvalidSubnetIDException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidSubnetIDException, __BaseException>
  );
}
export declare class InvalidZipFileException extends __BaseException {
  readonly name: "InvalidZipFileException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidZipFileException, __BaseException>
  );
}
export declare enum InvocationType {
  DryRun = "DryRun",
  Event = "Event",
  RequestResponse = "RequestResponse",
}
export declare enum LogType {
  None = "None",
  Tail = "Tail",
}
export interface InvocationRequest {
  FunctionName: string | undefined;
  InvocationType?: InvocationType | string;
  LogType?: LogType | string;
  ClientContext?: string;
  Payload?: Uint8Array;
  Qualifier?: string;
}
export interface InvocationResponse {
  StatusCode?: number;
  FunctionError?: string;
  LogResult?: string;
  Payload?: Uint8Array;
  ExecutedVersion?: string;
}
export declare class KMSAccessDeniedException extends __BaseException {
  readonly name: "KMSAccessDeniedException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<KMSAccessDeniedException, __BaseException>
  );
}
export declare class KMSDisabledException extends __BaseException {
  readonly name: "KMSDisabledException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<KMSDisabledException, __BaseException>
  );
}
export declare class KMSInvalidStateException extends __BaseException {
  readonly name: "KMSInvalidStateException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<KMSInvalidStateException, __BaseException>
  );
}
export declare class KMSNotFoundException extends __BaseException {
  readonly name: "KMSNotFoundException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<KMSNotFoundException, __BaseException>
  );
}
export declare class RequestTooLargeException extends __BaseException {
  readonly name: "RequestTooLargeException";
  readonly $fault: "client";
  Type?: string;
  constructor(
    opts: __ExceptionOptionType<RequestTooLargeException, __BaseException>
  );
}
export declare class ResourceNotReadyException extends __BaseException {
  readonly name: "ResourceNotReadyException";
  readonly $fault: "server";
  Type?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotReadyException, __BaseException>
  );
}
export declare class SnapStartException extends __BaseException {
  readonly name: "SnapStartException";
  readonly $fault: "client";
  Type?: string;
  Message?: string;
  constructor(opts: __ExceptionOptionType<SnapStartException, __BaseException>);
}
export declare class SnapStartNotReadyException extends __BaseException {
  readonly name: "SnapStartNotReadyException";
  readonly $fault: "client";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<SnapStartNotReadyException, __BaseException>
  );
}
export declare class SnapStartTimeoutException extends __BaseException {
  readonly name: "SnapStartTimeoutException";
  readonly $fault: "client";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<SnapStartTimeoutException, __BaseException>
  );
}
export declare class SubnetIPAddressLimitReachedException extends __BaseException {
  readonly name: "SubnetIPAddressLimitReachedException";
  readonly $fault: "server";
  Type?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      SubnetIPAddressLimitReachedException,
      __BaseException
    >
  );
}
export declare class UnsupportedMediaTypeException extends __BaseException {
  readonly name: "UnsupportedMediaTypeException";
  readonly $fault: "client";
  Type?: string;
  constructor(
    opts: __ExceptionOptionType<UnsupportedMediaTypeException, __BaseException>
  );
}
export interface InvokeAsyncRequest {
  FunctionName: string | undefined;
  InvokeArgs: Readable | ReadableStream | Blob | undefined;
}
export interface InvokeAsyncResponse {
  Status?: number;
}
export interface ListAliasesRequest {
  FunctionName: string | undefined;
  FunctionVersion?: string;
  Marker?: string;
  MaxItems?: number;
}
export interface ListAliasesResponse {
  NextMarker?: string;
  Aliases?: AliasConfiguration[];
}
export interface ListCodeSigningConfigsRequest {
  Marker?: string;
  MaxItems?: number;
}
export interface ListCodeSigningConfigsResponse {
  NextMarker?: string;
  CodeSigningConfigs?: CodeSigningConfig[];
}
export interface ListEventSourceMappingsRequest {
  EventSourceArn?: string;
  FunctionName?: string;
  Marker?: string;
  MaxItems?: number;
}
export interface ListEventSourceMappingsResponse {
  NextMarker?: string;
  EventSourceMappings?: EventSourceMappingConfiguration[];
}
export interface ListFunctionEventInvokeConfigsRequest {
  FunctionName: string | undefined;
  Marker?: string;
  MaxItems?: number;
}
export interface ListFunctionEventInvokeConfigsResponse {
  FunctionEventInvokeConfigs?: FunctionEventInvokeConfig[];
  NextMarker?: string;
}
export declare enum FunctionVersion {
  ALL = "ALL",
}
export interface ListFunctionsRequest {
  MasterRegion?: string;
  FunctionVersion?: FunctionVersion | string;
  Marker?: string;
  MaxItems?: number;
}
export interface ListFunctionsResponse {
  NextMarker?: string;
  Functions?: FunctionConfiguration[];
}
export interface ListFunctionsByCodeSigningConfigRequest {
  CodeSigningConfigArn: string | undefined;
  Marker?: string;
  MaxItems?: number;
}
export interface ListFunctionsByCodeSigningConfigResponse {
  NextMarker?: string;
  FunctionArns?: string[];
}
export interface ListFunctionUrlConfigsRequest {
  FunctionName: string | undefined;
  Marker?: string;
  MaxItems?: number;
}
export interface FunctionUrlConfig {
  FunctionUrl: string | undefined;
  FunctionArn: string | undefined;
  CreationTime: string | undefined;
  LastModifiedTime: string | undefined;
  Cors?: Cors;
  AuthType: FunctionUrlAuthType | string | undefined;
}
export interface ListFunctionUrlConfigsResponse {
  FunctionUrlConfigs: FunctionUrlConfig[] | undefined;
  NextMarker?: string;
}
export interface ListLayersRequest {
  CompatibleRuntime?: Runtime | string;
  Marker?: string;
  MaxItems?: number;
  CompatibleArchitecture?: Architecture | string;
}
export interface LayerVersionsListItem {
  LayerVersionArn?: string;
  Version?: number;
  Description?: string;
  CreatedDate?: string;
  CompatibleRuntimes?: (Runtime | string)[];
  LicenseInfo?: string;
  CompatibleArchitectures?: (Architecture | string)[];
}
export interface LayersListItem {
  LayerName?: string;
  LayerArn?: string;
  LatestMatchingVersion?: LayerVersionsListItem;
}
export interface ListLayersResponse {
  NextMarker?: string;
  Layers?: LayersListItem[];
}
export interface ListLayerVersionsRequest {
  CompatibleRuntime?: Runtime | string;
  LayerName: string | undefined;
  Marker?: string;
  MaxItems?: number;
  CompatibleArchitecture?: Architecture | string;
}
export interface ListLayerVersionsResponse {
  NextMarker?: string;
  LayerVersions?: LayerVersionsListItem[];
}
export interface ListProvisionedConcurrencyConfigsRequest {
  FunctionName: string | undefined;
  Marker?: string;
  MaxItems?: number;
}
export interface ProvisionedConcurrencyConfigListItem {
  FunctionArn?: string;
  RequestedProvisionedConcurrentExecutions?: number;
  AvailableProvisionedConcurrentExecutions?: number;
  AllocatedProvisionedConcurrentExecutions?: number;
  Status?: ProvisionedConcurrencyStatusEnum | string;
  StatusReason?: string;
  LastModified?: string;
}
export interface ListProvisionedConcurrencyConfigsResponse {
  ProvisionedConcurrencyConfigs?: ProvisionedConcurrencyConfigListItem[];
  NextMarker?: string;
}
export interface ListTagsRequest {
  Resource: string | undefined;
}
export interface ListTagsResponse {
  Tags?: Record<string, string>;
}
export interface ListVersionsByFunctionRequest {
  FunctionName: string | undefined;
  Marker?: string;
  MaxItems?: number;
}
export interface ListVersionsByFunctionResponse {
  NextMarker?: string;
  Versions?: FunctionConfiguration[];
}
export interface LayerVersionContentInput {
  S3Bucket?: string;
  S3Key?: string;
  S3ObjectVersion?: string;
  ZipFile?: Uint8Array;
}
export interface PublishLayerVersionRequest {
  LayerName: string | undefined;
  Description?: string;
  Content: LayerVersionContentInput | undefined;
  CompatibleRuntimes?: (Runtime | string)[];
  LicenseInfo?: string;
  CompatibleArchitectures?: (Architecture | string)[];
}
export interface PublishLayerVersionResponse {
  Content?: LayerVersionContentOutput;
  LayerArn?: string;
  LayerVersionArn?: string;
  Description?: string;
  CreatedDate?: string;
  Version?: number;
  CompatibleRuntimes?: (Runtime | string)[];
  LicenseInfo?: string;
  CompatibleArchitectures?: (Architecture | string)[];
}
export interface PublishVersionRequest {
  FunctionName: string | undefined;
  CodeSha256?: string;
  Description?: string;
  RevisionId?: string;
}
export interface PutFunctionCodeSigningConfigRequest {
  CodeSigningConfigArn: string | undefined;
  FunctionName: string | undefined;
}
export interface PutFunctionCodeSigningConfigResponse {
  CodeSigningConfigArn: string | undefined;
  FunctionName: string | undefined;
}
export interface PutFunctionConcurrencyRequest {
  FunctionName: string | undefined;
  ReservedConcurrentExecutions: number | undefined;
}
export interface PutFunctionEventInvokeConfigRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
  MaximumRetryAttempts?: number;
  MaximumEventAgeInSeconds?: number;
  DestinationConfig?: DestinationConfig;
}
export interface PutProvisionedConcurrencyConfigRequest {
  FunctionName: string | undefined;
  Qualifier: string | undefined;
  ProvisionedConcurrentExecutions: number | undefined;
}
export interface PutProvisionedConcurrencyConfigResponse {
  RequestedProvisionedConcurrentExecutions?: number;
  AvailableProvisionedConcurrentExecutions?: number;
  AllocatedProvisionedConcurrentExecutions?: number;
  Status?: ProvisionedConcurrencyStatusEnum | string;
  StatusReason?: string;
  LastModified?: string;
}
export interface PutRuntimeManagementConfigRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
  UpdateRuntimeOn: UpdateRuntimeOn | string | undefined;
  RuntimeVersionArn?: string;
}
export interface PutRuntimeManagementConfigResponse {
  UpdateRuntimeOn: UpdateRuntimeOn | string | undefined;
  FunctionArn: string | undefined;
  RuntimeVersionArn?: string;
}
export interface RemoveLayerVersionPermissionRequest {
  LayerName: string | undefined;
  VersionNumber: number | undefined;
  StatementId: string | undefined;
  RevisionId?: string;
}
export interface RemovePermissionRequest {
  FunctionName: string | undefined;
  StatementId: string | undefined;
  Qualifier?: string;
  RevisionId?: string;
}
export interface TagResourceRequest {
  Resource: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface UntagResourceRequest {
  Resource: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UpdateAliasRequest {
  FunctionName: string | undefined;
  Name: string | undefined;
  FunctionVersion?: string;
  Description?: string;
  RoutingConfig?: AliasRoutingConfiguration;
  RevisionId?: string;
}
export interface UpdateCodeSigningConfigRequest {
  CodeSigningConfigArn: string | undefined;
  Description?: string;
  AllowedPublishers?: AllowedPublishers;
  CodeSigningPolicies?: CodeSigningPolicies;
}
export interface UpdateCodeSigningConfigResponse {
  CodeSigningConfig: CodeSigningConfig | undefined;
}
export interface UpdateEventSourceMappingRequest {
  UUID: string | undefined;
  FunctionName?: string;
  Enabled?: boolean;
  BatchSize?: number;
  FilterCriteria?: FilterCriteria;
  MaximumBatchingWindowInSeconds?: number;
  DestinationConfig?: DestinationConfig;
  MaximumRecordAgeInSeconds?: number;
  BisectBatchOnFunctionError?: boolean;
  MaximumRetryAttempts?: number;
  ParallelizationFactor?: number;
  SourceAccessConfigurations?: SourceAccessConfiguration[];
  TumblingWindowInSeconds?: number;
  FunctionResponseTypes?: (FunctionResponseType | string)[];
  ScalingConfig?: ScalingConfig;
  DocumentDBEventSourceConfig?: DocumentDBEventSourceConfig;
}
export interface UpdateFunctionCodeRequest {
  FunctionName: string | undefined;
  ZipFile?: Uint8Array;
  S3Bucket?: string;
  S3Key?: string;
  S3ObjectVersion?: string;
  ImageUri?: string;
  Publish?: boolean;
  DryRun?: boolean;
  RevisionId?: string;
  Architectures?: (Architecture | string)[];
}
export interface UpdateFunctionConfigurationRequest {
  FunctionName: string | undefined;
  Role?: string;
  Handler?: string;
  Description?: string;
  Timeout?: number;
  MemorySize?: number;
  VpcConfig?: VpcConfig;
  Environment?: Environment;
  Runtime?: Runtime | string;
  DeadLetterConfig?: DeadLetterConfig;
  KMSKeyArn?: string;
  TracingConfig?: TracingConfig;
  RevisionId?: string;
  Layers?: string[];
  FileSystemConfigs?: FileSystemConfig[];
  ImageConfig?: ImageConfig;
  EphemeralStorage?: EphemeralStorage;
  SnapStart?: SnapStart;
}
export interface UpdateFunctionEventInvokeConfigRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
  MaximumRetryAttempts?: number;
  MaximumEventAgeInSeconds?: number;
  DestinationConfig?: DestinationConfig;
}
export interface UpdateFunctionUrlConfigRequest {
  FunctionName: string | undefined;
  Qualifier?: string;
  AuthType?: FunctionUrlAuthType | string;
  Cors?: Cors;
}
export interface UpdateFunctionUrlConfigResponse {
  FunctionUrl: string | undefined;
  FunctionArn: string | undefined;
  AuthType: FunctionUrlAuthType | string | undefined;
  Cors?: Cors;
  CreationTime: string | undefined;
  LastModifiedTime: string | undefined;
}
export declare const AccountLimitFilterSensitiveLog: (obj: AccountLimit) => any;
export declare const AccountUsageFilterSensitiveLog: (obj: AccountUsage) => any;
export declare const AddLayerVersionPermissionRequestFilterSensitiveLog: (
  obj: AddLayerVersionPermissionRequest
) => any;
export declare const AddLayerVersionPermissionResponseFilterSensitiveLog: (
  obj: AddLayerVersionPermissionResponse
) => any;
export declare const AddPermissionRequestFilterSensitiveLog: (
  obj: AddPermissionRequest
) => any;
export declare const AddPermissionResponseFilterSensitiveLog: (
  obj: AddPermissionResponse
) => any;
export declare const AliasRoutingConfigurationFilterSensitiveLog: (
  obj: AliasRoutingConfiguration
) => any;
export declare const AliasConfigurationFilterSensitiveLog: (
  obj: AliasConfiguration
) => any;
export declare const AllowedPublishersFilterSensitiveLog: (
  obj: AllowedPublishers
) => any;
export declare const AmazonManagedKafkaEventSourceConfigFilterSensitiveLog: (
  obj: AmazonManagedKafkaEventSourceConfig
) => any;
export declare const CreateAliasRequestFilterSensitiveLog: (
  obj: CreateAliasRequest
) => any;
export declare const CodeSigningPoliciesFilterSensitiveLog: (
  obj: CodeSigningPolicies
) => any;
export declare const CreateCodeSigningConfigRequestFilterSensitiveLog: (
  obj: CreateCodeSigningConfigRequest
) => any;
export declare const CodeSigningConfigFilterSensitiveLog: (
  obj: CodeSigningConfig
) => any;
export declare const CreateCodeSigningConfigResponseFilterSensitiveLog: (
  obj: CreateCodeSigningConfigResponse
) => any;
export declare const OnFailureFilterSensitiveLog: (obj: OnFailure) => any;
export declare const OnSuccessFilterSensitiveLog: (obj: OnSuccess) => any;
export declare const DestinationConfigFilterSensitiveLog: (
  obj: DestinationConfig
) => any;
export declare const DocumentDBEventSourceConfigFilterSensitiveLog: (
  obj: DocumentDBEventSourceConfig
) => any;
export declare const FilterFilterSensitiveLog: (obj: Filter) => any;
export declare const FilterCriteriaFilterSensitiveLog: (
  obj: FilterCriteria
) => any;
export declare const ScalingConfigFilterSensitiveLog: (
  obj: ScalingConfig
) => any;
export declare const SelfManagedEventSourceFilterSensitiveLog: (
  obj: SelfManagedEventSource
) => any;
export declare const SelfManagedKafkaEventSourceConfigFilterSensitiveLog: (
  obj: SelfManagedKafkaEventSourceConfig
) => any;
export declare const SourceAccessConfigurationFilterSensitiveLog: (
  obj: SourceAccessConfiguration
) => any;
export declare const CreateEventSourceMappingRequestFilterSensitiveLog: (
  obj: CreateEventSourceMappingRequest
) => any;
export declare const EventSourceMappingConfigurationFilterSensitiveLog: (
  obj: EventSourceMappingConfiguration
) => any;
export declare const FunctionCodeFilterSensitiveLog: (obj: FunctionCode) => any;
export declare const DeadLetterConfigFilterSensitiveLog: (
  obj: DeadLetterConfig
) => any;
export declare const EnvironmentFilterSensitiveLog: (obj: Environment) => any;
export declare const EphemeralStorageFilterSensitiveLog: (
  obj: EphemeralStorage
) => any;
export declare const FileSystemConfigFilterSensitiveLog: (
  obj: FileSystemConfig
) => any;
export declare const ImageConfigFilterSensitiveLog: (obj: ImageConfig) => any;
export declare const SnapStartFilterSensitiveLog: (obj: SnapStart) => any;
export declare const TracingConfigFilterSensitiveLog: (
  obj: TracingConfig
) => any;
export declare const VpcConfigFilterSensitiveLog: (obj: VpcConfig) => any;
export declare const CreateFunctionRequestFilterSensitiveLog: (
  obj: CreateFunctionRequest
) => any;
export declare const EnvironmentErrorFilterSensitiveLog: (
  obj: EnvironmentError
) => any;
export declare const EnvironmentResponseFilterSensitiveLog: (
  obj: EnvironmentResponse
) => any;
export declare const ImageConfigErrorFilterSensitiveLog: (
  obj: ImageConfigError
) => any;
export declare const ImageConfigResponseFilterSensitiveLog: (
  obj: ImageConfigResponse
) => any;
export declare const LayerFilterSensitiveLog: (obj: Layer) => any;
export declare const RuntimeVersionErrorFilterSensitiveLog: (
  obj: RuntimeVersionError
) => any;
export declare const RuntimeVersionConfigFilterSensitiveLog: (
  obj: RuntimeVersionConfig
) => any;
export declare const SnapStartResponseFilterSensitiveLog: (
  obj: SnapStartResponse
) => any;
export declare const TracingConfigResponseFilterSensitiveLog: (
  obj: TracingConfigResponse
) => any;
export declare const VpcConfigResponseFilterSensitiveLog: (
  obj: VpcConfigResponse
) => any;
export declare const FunctionConfigurationFilterSensitiveLog: (
  obj: FunctionConfiguration
) => any;
export declare const CorsFilterSensitiveLog: (obj: Cors) => any;
export declare const CreateFunctionUrlConfigRequestFilterSensitiveLog: (
  obj: CreateFunctionUrlConfigRequest
) => any;
export declare const CreateFunctionUrlConfigResponseFilterSensitiveLog: (
  obj: CreateFunctionUrlConfigResponse
) => any;
export declare const DeleteAliasRequestFilterSensitiveLog: (
  obj: DeleteAliasRequest
) => any;
export declare const DeleteCodeSigningConfigRequestFilterSensitiveLog: (
  obj: DeleteCodeSigningConfigRequest
) => any;
export declare const DeleteCodeSigningConfigResponseFilterSensitiveLog: (
  obj: DeleteCodeSigningConfigResponse
) => any;
export declare const DeleteEventSourceMappingRequestFilterSensitiveLog: (
  obj: DeleteEventSourceMappingRequest
) => any;
export declare const DeleteFunctionRequestFilterSensitiveLog: (
  obj: DeleteFunctionRequest
) => any;
export declare const DeleteFunctionCodeSigningConfigRequestFilterSensitiveLog: (
  obj: DeleteFunctionCodeSigningConfigRequest
) => any;
export declare const DeleteFunctionConcurrencyRequestFilterSensitiveLog: (
  obj: DeleteFunctionConcurrencyRequest
) => any;
export declare const DeleteFunctionEventInvokeConfigRequestFilterSensitiveLog: (
  obj: DeleteFunctionEventInvokeConfigRequest
) => any;
export declare const DeleteFunctionUrlConfigRequestFilterSensitiveLog: (
  obj: DeleteFunctionUrlConfigRequest
) => any;
export declare const DeleteLayerVersionRequestFilterSensitiveLog: (
  obj: DeleteLayerVersionRequest
) => any;
export declare const DeleteProvisionedConcurrencyConfigRequestFilterSensitiveLog: (
  obj: DeleteProvisionedConcurrencyConfigRequest
) => any;
export declare const GetAccountSettingsRequestFilterSensitiveLog: (
  obj: GetAccountSettingsRequest
) => any;
export declare const GetAccountSettingsResponseFilterSensitiveLog: (
  obj: GetAccountSettingsResponse
) => any;
export declare const GetAliasRequestFilterSensitiveLog: (
  obj: GetAliasRequest
) => any;
export declare const GetCodeSigningConfigRequestFilterSensitiveLog: (
  obj: GetCodeSigningConfigRequest
) => any;
export declare const GetCodeSigningConfigResponseFilterSensitiveLog: (
  obj: GetCodeSigningConfigResponse
) => any;
export declare const GetEventSourceMappingRequestFilterSensitiveLog: (
  obj: GetEventSourceMappingRequest
) => any;
export declare const GetFunctionRequestFilterSensitiveLog: (
  obj: GetFunctionRequest
) => any;
export declare const FunctionCodeLocationFilterSensitiveLog: (
  obj: FunctionCodeLocation
) => any;
export declare const ConcurrencyFilterSensitiveLog: (obj: Concurrency) => any;
export declare const GetFunctionResponseFilterSensitiveLog: (
  obj: GetFunctionResponse
) => any;
export declare const GetFunctionCodeSigningConfigRequestFilterSensitiveLog: (
  obj: GetFunctionCodeSigningConfigRequest
) => any;
export declare const GetFunctionCodeSigningConfigResponseFilterSensitiveLog: (
  obj: GetFunctionCodeSigningConfigResponse
) => any;
export declare const GetFunctionConcurrencyRequestFilterSensitiveLog: (
  obj: GetFunctionConcurrencyRequest
) => any;
export declare const GetFunctionConcurrencyResponseFilterSensitiveLog: (
  obj: GetFunctionConcurrencyResponse
) => any;
export declare const GetFunctionConfigurationRequestFilterSensitiveLog: (
  obj: GetFunctionConfigurationRequest
) => any;
export declare const FunctionEventInvokeConfigFilterSensitiveLog: (
  obj: FunctionEventInvokeConfig
) => any;
export declare const GetFunctionEventInvokeConfigRequestFilterSensitiveLog: (
  obj: GetFunctionEventInvokeConfigRequest
) => any;
export declare const GetFunctionUrlConfigRequestFilterSensitiveLog: (
  obj: GetFunctionUrlConfigRequest
) => any;
export declare const GetFunctionUrlConfigResponseFilterSensitiveLog: (
  obj: GetFunctionUrlConfigResponse
) => any;
export declare const GetLayerVersionRequestFilterSensitiveLog: (
  obj: GetLayerVersionRequest
) => any;
export declare const LayerVersionContentOutputFilterSensitiveLog: (
  obj: LayerVersionContentOutput
) => any;
export declare const GetLayerVersionResponseFilterSensitiveLog: (
  obj: GetLayerVersionResponse
) => any;
export declare const GetLayerVersionByArnRequestFilterSensitiveLog: (
  obj: GetLayerVersionByArnRequest
) => any;
export declare const GetLayerVersionPolicyRequestFilterSensitiveLog: (
  obj: GetLayerVersionPolicyRequest
) => any;
export declare const GetLayerVersionPolicyResponseFilterSensitiveLog: (
  obj: GetLayerVersionPolicyResponse
) => any;
export declare const GetPolicyRequestFilterSensitiveLog: (
  obj: GetPolicyRequest
) => any;
export declare const GetPolicyResponseFilterSensitiveLog: (
  obj: GetPolicyResponse
) => any;
export declare const GetProvisionedConcurrencyConfigRequestFilterSensitiveLog: (
  obj: GetProvisionedConcurrencyConfigRequest
) => any;
export declare const GetProvisionedConcurrencyConfigResponseFilterSensitiveLog: (
  obj: GetProvisionedConcurrencyConfigResponse
) => any;
export declare const GetRuntimeManagementConfigRequestFilterSensitiveLog: (
  obj: GetRuntimeManagementConfigRequest
) => any;
export declare const GetRuntimeManagementConfigResponseFilterSensitiveLog: (
  obj: GetRuntimeManagementConfigResponse
) => any;
export declare const InvocationRequestFilterSensitiveLog: (
  obj: InvocationRequest
) => any;
export declare const InvocationResponseFilterSensitiveLog: (
  obj: InvocationResponse
) => any;
export declare const InvokeAsyncRequestFilterSensitiveLog: (
  obj: InvokeAsyncRequest
) => any;
export declare const InvokeAsyncResponseFilterSensitiveLog: (
  obj: InvokeAsyncResponse
) => any;
export declare const ListAliasesRequestFilterSensitiveLog: (
  obj: ListAliasesRequest
) => any;
export declare const ListAliasesResponseFilterSensitiveLog: (
  obj: ListAliasesResponse
) => any;
export declare const ListCodeSigningConfigsRequestFilterSensitiveLog: (
  obj: ListCodeSigningConfigsRequest
) => any;
export declare const ListCodeSigningConfigsResponseFilterSensitiveLog: (
  obj: ListCodeSigningConfigsResponse
) => any;
export declare const ListEventSourceMappingsRequestFilterSensitiveLog: (
  obj: ListEventSourceMappingsRequest
) => any;
export declare const ListEventSourceMappingsResponseFilterSensitiveLog: (
  obj: ListEventSourceMappingsResponse
) => any;
export declare const ListFunctionEventInvokeConfigsRequestFilterSensitiveLog: (
  obj: ListFunctionEventInvokeConfigsRequest
) => any;
export declare const ListFunctionEventInvokeConfigsResponseFilterSensitiveLog: (
  obj: ListFunctionEventInvokeConfigsResponse
) => any;
export declare const ListFunctionsRequestFilterSensitiveLog: (
  obj: ListFunctionsRequest
) => any;
export declare const ListFunctionsResponseFilterSensitiveLog: (
  obj: ListFunctionsResponse
) => any;
export declare const ListFunctionsByCodeSigningConfigRequestFilterSensitiveLog: (
  obj: ListFunctionsByCodeSigningConfigRequest
) => any;
export declare const ListFunctionsByCodeSigningConfigResponseFilterSensitiveLog: (
  obj: ListFunctionsByCodeSigningConfigResponse
) => any;
export declare const ListFunctionUrlConfigsRequestFilterSensitiveLog: (
  obj: ListFunctionUrlConfigsRequest
) => any;
export declare const FunctionUrlConfigFilterSensitiveLog: (
  obj: FunctionUrlConfig
) => any;
export declare const ListFunctionUrlConfigsResponseFilterSensitiveLog: (
  obj: ListFunctionUrlConfigsResponse
) => any;
export declare const ListLayersRequestFilterSensitiveLog: (
  obj: ListLayersRequest
) => any;
export declare const LayerVersionsListItemFilterSensitiveLog: (
  obj: LayerVersionsListItem
) => any;
export declare const LayersListItemFilterSensitiveLog: (
  obj: LayersListItem
) => any;
export declare const ListLayersResponseFilterSensitiveLog: (
  obj: ListLayersResponse
) => any;
export declare const ListLayerVersionsRequestFilterSensitiveLog: (
  obj: ListLayerVersionsRequest
) => any;
export declare const ListLayerVersionsResponseFilterSensitiveLog: (
  obj: ListLayerVersionsResponse
) => any;
export declare const ListProvisionedConcurrencyConfigsRequestFilterSensitiveLog: (
  obj: ListProvisionedConcurrencyConfigsRequest
) => any;
export declare const ProvisionedConcurrencyConfigListItemFilterSensitiveLog: (
  obj: ProvisionedConcurrencyConfigListItem
) => any;
export declare const ListProvisionedConcurrencyConfigsResponseFilterSensitiveLog: (
  obj: ListProvisionedConcurrencyConfigsResponse
) => any;
export declare const ListTagsRequestFilterSensitiveLog: (
  obj: ListTagsRequest
) => any;
export declare const ListTagsResponseFilterSensitiveLog: (
  obj: ListTagsResponse
) => any;
export declare const ListVersionsByFunctionRequestFilterSensitiveLog: (
  obj: ListVersionsByFunctionRequest
) => any;
export declare const ListVersionsByFunctionResponseFilterSensitiveLog: (
  obj: ListVersionsByFunctionResponse
) => any;
export declare const LayerVersionContentInputFilterSensitiveLog: (
  obj: LayerVersionContentInput
) => any;
export declare const PublishLayerVersionRequestFilterSensitiveLog: (
  obj: PublishLayerVersionRequest
) => any;
export declare const PublishLayerVersionResponseFilterSensitiveLog: (
  obj: PublishLayerVersionResponse
) => any;
export declare const PublishVersionRequestFilterSensitiveLog: (
  obj: PublishVersionRequest
) => any;
export declare const PutFunctionCodeSigningConfigRequestFilterSensitiveLog: (
  obj: PutFunctionCodeSigningConfigRequest
) => any;
export declare const PutFunctionCodeSigningConfigResponseFilterSensitiveLog: (
  obj: PutFunctionCodeSigningConfigResponse
) => any;
export declare const PutFunctionConcurrencyRequestFilterSensitiveLog: (
  obj: PutFunctionConcurrencyRequest
) => any;
export declare const PutFunctionEventInvokeConfigRequestFilterSensitiveLog: (
  obj: PutFunctionEventInvokeConfigRequest
) => any;
export declare const PutProvisionedConcurrencyConfigRequestFilterSensitiveLog: (
  obj: PutProvisionedConcurrencyConfigRequest
) => any;
export declare const PutProvisionedConcurrencyConfigResponseFilterSensitiveLog: (
  obj: PutProvisionedConcurrencyConfigResponse
) => any;
export declare const PutRuntimeManagementConfigRequestFilterSensitiveLog: (
  obj: PutRuntimeManagementConfigRequest
) => any;
export declare const PutRuntimeManagementConfigResponseFilterSensitiveLog: (
  obj: PutRuntimeManagementConfigResponse
) => any;
export declare const RemoveLayerVersionPermissionRequestFilterSensitiveLog: (
  obj: RemoveLayerVersionPermissionRequest
) => any;
export declare const RemovePermissionRequestFilterSensitiveLog: (
  obj: RemovePermissionRequest
) => any;
export declare const TagResourceRequestFilterSensitiveLog: (
  obj: TagResourceRequest
) => any;
export declare const UntagResourceRequestFilterSensitiveLog: (
  obj: UntagResourceRequest
) => any;
export declare const UpdateAliasRequestFilterSensitiveLog: (
  obj: UpdateAliasRequest
) => any;
export declare const UpdateCodeSigningConfigRequestFilterSensitiveLog: (
  obj: UpdateCodeSigningConfigRequest
) => any;
export declare const UpdateCodeSigningConfigResponseFilterSensitiveLog: (
  obj: UpdateCodeSigningConfigResponse
) => any;
export declare const UpdateEventSourceMappingRequestFilterSensitiveLog: (
  obj: UpdateEventSourceMappingRequest
) => any;
export declare const UpdateFunctionCodeRequestFilterSensitiveLog: (
  obj: UpdateFunctionCodeRequest
) => any;
export declare const UpdateFunctionConfigurationRequestFilterSensitiveLog: (
  obj: UpdateFunctionConfigurationRequest
) => any;
export declare const UpdateFunctionEventInvokeConfigRequestFilterSensitiveLog: (
  obj: UpdateFunctionEventInvokeConfigRequest
) => any;
export declare const UpdateFunctionUrlConfigRequestFilterSensitiveLog: (
  obj: UpdateFunctionUrlConfigRequest
) => any;
export declare const UpdateFunctionUrlConfigResponseFilterSensitiveLog: (
  obj: UpdateFunctionUrlConfigResponse
) => any;
