"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KMSDisabledException = exports.KMSAccessDeniedException = exports.LogType = exports.InvocationType = exports.InvalidZipFileException = exports.InvalidSubnetIDException = exports.InvalidSecurityGroupIDException = exports.InvalidRuntimeException = exports.InvalidRequestContentException = exports.ENILimitReachedException = exports.EFSMountTimeoutException = exports.EFSMountFailureException = exports.EFSMountConnectivityException = exports.EFSIOException = exports.EC2UnexpectedException = exports.EC2ThrottledException = exports.EC2AccessDeniedException = exports.UpdateRuntimeOn = exports.ProvisionedConcurrencyConfigNotFoundException = exports.ProvisionedConcurrencyStatusEnum = exports.ResourceInUseException = exports.InvalidCodeSignatureException = exports.StateReasonCode = exports.State = exports.SnapStartOptimizationStatus = exports.LastUpdateStatusReasonCode = exports.LastUpdateStatus = exports.TracingMode = exports.SnapStartApplyOn = exports.Runtime = exports.PackageType = exports.CodeVerificationFailedException = exports.CodeStorageExceededException = exports.CodeSigningConfigNotFoundException = exports.EventSourcePosition = exports.SourceAccessType = exports.EndPointType = exports.FunctionResponseType = exports.FullDocument = exports.CodeSigningPolicy = exports.Architecture = exports.FunctionUrlAuthType = exports.TooManyRequestsException = exports.ThrottleReason = exports.ServiceException = exports.ResourceNotFoundException = exports.ResourceConflictException = exports.PreconditionFailedException = exports.PolicyLengthExceededException = exports.InvalidParameterValueException = void 0;
exports.ImageConfigErrorFilterSensitiveLog = exports.EnvironmentResponseFilterSensitiveLog = exports.EnvironmentErrorFilterSensitiveLog = exports.CreateFunctionRequestFilterSensitiveLog = exports.VpcConfigFilterSensitiveLog = exports.TracingConfigFilterSensitiveLog = exports.SnapStartFilterSensitiveLog = exports.ImageConfigFilterSensitiveLog = exports.FileSystemConfigFilterSensitiveLog = exports.EphemeralStorageFilterSensitiveLog = exports.EnvironmentFilterSensitiveLog = exports.DeadLetterConfigFilterSensitiveLog = exports.FunctionCodeFilterSensitiveLog = exports.EventSourceMappingConfigurationFilterSensitiveLog = exports.CreateEventSourceMappingRequestFilterSensitiveLog = exports.SourceAccessConfigurationFilterSensitiveLog = exports.SelfManagedKafkaEventSourceConfigFilterSensitiveLog = exports.SelfManagedEventSourceFilterSensitiveLog = exports.ScalingConfigFilterSensitiveLog = exports.FilterCriteriaFilterSensitiveLog = exports.FilterFilterSensitiveLog = exports.DocumentDBEventSourceConfigFilterSensitiveLog = exports.DestinationConfigFilterSensitiveLog = exports.OnSuccessFilterSensitiveLog = exports.OnFailureFilterSensitiveLog = exports.CreateCodeSigningConfigResponseFilterSensitiveLog = exports.CodeSigningConfigFilterSensitiveLog = exports.CreateCodeSigningConfigRequestFilterSensitiveLog = exports.CodeSigningPoliciesFilterSensitiveLog = exports.CreateAliasRequestFilterSensitiveLog = exports.AmazonManagedKafkaEventSourceConfigFilterSensitiveLog = exports.AllowedPublishersFilterSensitiveLog = exports.AliasConfigurationFilterSensitiveLog = exports.AliasRoutingConfigurationFilterSensitiveLog = exports.AddPermissionResponseFilterSensitiveLog = exports.AddPermissionRequestFilterSensitiveLog = exports.AddLayerVersionPermissionResponseFilterSensitiveLog = exports.AddLayerVersionPermissionRequestFilterSensitiveLog = exports.AccountUsageFilterSensitiveLog = exports.AccountLimitFilterSensitiveLog = exports.FunctionVersion = exports.UnsupportedMediaTypeException = exports.SubnetIPAddressLimitReachedException = exports.SnapStartTimeoutException = exports.SnapStartNotReadyException = exports.SnapStartException = exports.ResourceNotReadyException = exports.RequestTooLargeException = exports.KMSNotFoundException = exports.KMSInvalidStateException = void 0;
exports.GetProvisionedConcurrencyConfigRequestFilterSensitiveLog = exports.GetPolicyResponseFilterSensitiveLog = exports.GetPolicyRequestFilterSensitiveLog = exports.GetLayerVersionPolicyResponseFilterSensitiveLog = exports.GetLayerVersionPolicyRequestFilterSensitiveLog = exports.GetLayerVersionByArnRequestFilterSensitiveLog = exports.GetLayerVersionResponseFilterSensitiveLog = exports.LayerVersionContentOutputFilterSensitiveLog = exports.GetLayerVersionRequestFilterSensitiveLog = exports.GetFunctionUrlConfigResponseFilterSensitiveLog = exports.GetFunctionUrlConfigRequestFilterSensitiveLog = exports.GetFunctionEventInvokeConfigRequestFilterSensitiveLog = exports.FunctionEventInvokeConfigFilterSensitiveLog = exports.GetFunctionConfigurationRequestFilterSensitiveLog = exports.GetFunctionConcurrencyResponseFilterSensitiveLog = exports.GetFunctionConcurrencyRequestFilterSensitiveLog = exports.GetFunctionCodeSigningConfigResponseFilterSensitiveLog = exports.GetFunctionCodeSigningConfigRequestFilterSensitiveLog = exports.GetFunctionResponseFilterSensitiveLog = exports.ConcurrencyFilterSensitiveLog = exports.FunctionCodeLocationFilterSensitiveLog = exports.GetFunctionRequestFilterSensitiveLog = exports.GetEventSourceMappingRequestFilterSensitiveLog = exports.GetCodeSigningConfigResponseFilterSensitiveLog = exports.GetCodeSigningConfigRequestFilterSensitiveLog = exports.GetAliasRequestFilterSensitiveLog = exports.GetAccountSettingsResponseFilterSensitiveLog = exports.GetAccountSettingsRequestFilterSensitiveLog = exports.DeleteProvisionedConcurrencyConfigRequestFilterSensitiveLog = exports.DeleteLayerVersionRequestFilterSensitiveLog = exports.DeleteFunctionUrlConfigRequestFilterSensitiveLog = exports.DeleteFunctionEventInvokeConfigRequestFilterSensitiveLog = exports.DeleteFunctionConcurrencyRequestFilterSensitiveLog = exports.DeleteFunctionCodeSigningConfigRequestFilterSensitiveLog = exports.DeleteFunctionRequestFilterSensitiveLog = exports.DeleteEventSourceMappingRequestFilterSensitiveLog = exports.DeleteCodeSigningConfigResponseFilterSensitiveLog = exports.DeleteCodeSigningConfigRequestFilterSensitiveLog = exports.DeleteAliasRequestFilterSensitiveLog = exports.CreateFunctionUrlConfigResponseFilterSensitiveLog = exports.CreateFunctionUrlConfigRequestFilterSensitiveLog = exports.CorsFilterSensitiveLog = exports.FunctionConfigurationFilterSensitiveLog = exports.VpcConfigResponseFilterSensitiveLog = exports.TracingConfigResponseFilterSensitiveLog = exports.SnapStartResponseFilterSensitiveLog = exports.RuntimeVersionConfigFilterSensitiveLog = exports.RuntimeVersionErrorFilterSensitiveLog = exports.LayerFilterSensitiveLog = exports.ImageConfigResponseFilterSensitiveLog = void 0;
exports.TagResourceRequestFilterSensitiveLog = exports.RemovePermissionRequestFilterSensitiveLog = exports.RemoveLayerVersionPermissionRequestFilterSensitiveLog = exports.PutRuntimeManagementConfigResponseFilterSensitiveLog = exports.PutRuntimeManagementConfigRequestFilterSensitiveLog = exports.PutProvisionedConcurrencyConfigResponseFilterSensitiveLog = exports.PutProvisionedConcurrencyConfigRequestFilterSensitiveLog = exports.PutFunctionEventInvokeConfigRequestFilterSensitiveLog = exports.PutFunctionConcurrencyRequestFilterSensitiveLog = exports.PutFunctionCodeSigningConfigResponseFilterSensitiveLog = exports.PutFunctionCodeSigningConfigRequestFilterSensitiveLog = exports.PublishVersionRequestFilterSensitiveLog = exports.PublishLayerVersionResponseFilterSensitiveLog = exports.PublishLayerVersionRequestFilterSensitiveLog = exports.LayerVersionContentInputFilterSensitiveLog = exports.ListVersionsByFunctionResponseFilterSensitiveLog = exports.ListVersionsByFunctionRequestFilterSensitiveLog = exports.ListTagsResponseFilterSensitiveLog = exports.ListTagsRequestFilterSensitiveLog = exports.ListProvisionedConcurrencyConfigsResponseFilterSensitiveLog = exports.ProvisionedConcurrencyConfigListItemFilterSensitiveLog = exports.ListProvisionedConcurrencyConfigsRequestFilterSensitiveLog = exports.ListLayerVersionsResponseFilterSensitiveLog = exports.ListLayerVersionsRequestFilterSensitiveLog = exports.ListLayersResponseFilterSensitiveLog = exports.LayersListItemFilterSensitiveLog = exports.LayerVersionsListItemFilterSensitiveLog = exports.ListLayersRequestFilterSensitiveLog = exports.ListFunctionUrlConfigsResponseFilterSensitiveLog = exports.FunctionUrlConfigFilterSensitiveLog = exports.ListFunctionUrlConfigsRequestFilterSensitiveLog = exports.ListFunctionsByCodeSigningConfigResponseFilterSensitiveLog = exports.ListFunctionsByCodeSigningConfigRequestFilterSensitiveLog = exports.ListFunctionsResponseFilterSensitiveLog = exports.ListFunctionsRequestFilterSensitiveLog = exports.ListFunctionEventInvokeConfigsResponseFilterSensitiveLog = exports.ListFunctionEventInvokeConfigsRequestFilterSensitiveLog = exports.ListEventSourceMappingsResponseFilterSensitiveLog = exports.ListEventSourceMappingsRequestFilterSensitiveLog = exports.ListCodeSigningConfigsResponseFilterSensitiveLog = exports.ListCodeSigningConfigsRequestFilterSensitiveLog = exports.ListAliasesResponseFilterSensitiveLog = exports.ListAliasesRequestFilterSensitiveLog = exports.InvokeAsyncResponseFilterSensitiveLog = exports.InvokeAsyncRequestFilterSensitiveLog = exports.InvocationResponseFilterSensitiveLog = exports.InvocationRequestFilterSensitiveLog = exports.GetRuntimeManagementConfigResponseFilterSensitiveLog = exports.GetRuntimeManagementConfigRequestFilterSensitiveLog = exports.GetProvisionedConcurrencyConfigResponseFilterSensitiveLog = void 0;
exports.UpdateFunctionUrlConfigResponseFilterSensitiveLog = exports.UpdateFunctionUrlConfigRequestFilterSensitiveLog = exports.UpdateFunctionEventInvokeConfigRequestFilterSensitiveLog = exports.UpdateFunctionConfigurationRequestFilterSensitiveLog = exports.UpdateFunctionCodeRequestFilterSensitiveLog = exports.UpdateEventSourceMappingRequestFilterSensitiveLog = exports.UpdateCodeSigningConfigResponseFilterSensitiveLog = exports.UpdateCodeSigningConfigRequestFilterSensitiveLog = exports.UpdateAliasRequestFilterSensitiveLog = exports.UntagResourceRequestFilterSensitiveLog = void 0;
const smithy_client_1 = require("@aws-sdk/smithy-client");
const LambdaServiceException_1 = require("./LambdaServiceException");
class InvalidParameterValueException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "InvalidParameterValueException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterValueException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterValueException.prototype);
        this.Type = opts.Type;
    }
}
exports.InvalidParameterValueException = InvalidParameterValueException;
class PolicyLengthExceededException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "PolicyLengthExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "PolicyLengthExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PolicyLengthExceededException.prototype);
        this.Type = opts.Type;
    }
}
exports.PolicyLengthExceededException = PolicyLengthExceededException;
class PreconditionFailedException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "PreconditionFailedException",
            $fault: "client",
            ...opts,
        });
        this.name = "PreconditionFailedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PreconditionFailedException.prototype);
        this.Type = opts.Type;
    }
}
exports.PreconditionFailedException = PreconditionFailedException;
class ResourceConflictException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "ResourceConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceConflictException.prototype);
        this.Type = opts.Type;
    }
}
exports.ResourceConflictException = ResourceConflictException;
class ResourceNotFoundException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
class ServiceException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "ServiceException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.ServiceException = ServiceException;
var ThrottleReason;
(function (ThrottleReason) {
    ThrottleReason["CallerRateLimitExceeded"] = "CallerRateLimitExceeded";
    ThrottleReason["ConcurrentInvocationLimitExceeded"] = "ConcurrentInvocationLimitExceeded";
    ThrottleReason["ConcurrentSnapshotCreateLimitExceeded"] = "ConcurrentSnapshotCreateLimitExceeded";
    ThrottleReason["FunctionInvocationRateLimitExceeded"] = "FunctionInvocationRateLimitExceeded";
    ThrottleReason["ReservedFunctionConcurrentInvocationLimitExceeded"] = "ReservedFunctionConcurrentInvocationLimitExceeded";
    ThrottleReason["ReservedFunctionInvocationRateLimitExceeded"] = "ReservedFunctionInvocationRateLimitExceeded";
})(ThrottleReason = exports.ThrottleReason || (exports.ThrottleReason = {}));
class TooManyRequestsException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRequestsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
        this.retryAfterSeconds = opts.retryAfterSeconds;
        this.Type = opts.Type;
        this.Reason = opts.Reason;
    }
}
exports.TooManyRequestsException = TooManyRequestsException;
var FunctionUrlAuthType;
(function (FunctionUrlAuthType) {
    FunctionUrlAuthType["AWS_IAM"] = "AWS_IAM";
    FunctionUrlAuthType["NONE"] = "NONE";
})(FunctionUrlAuthType = exports.FunctionUrlAuthType || (exports.FunctionUrlAuthType = {}));
var Architecture;
(function (Architecture) {
    Architecture["arm64"] = "arm64";
    Architecture["x86_64"] = "x86_64";
})(Architecture = exports.Architecture || (exports.Architecture = {}));
var CodeSigningPolicy;
(function (CodeSigningPolicy) {
    CodeSigningPolicy["Enforce"] = "Enforce";
    CodeSigningPolicy["Warn"] = "Warn";
})(CodeSigningPolicy = exports.CodeSigningPolicy || (exports.CodeSigningPolicy = {}));
var FullDocument;
(function (FullDocument) {
    FullDocument["Default"] = "Default";
    FullDocument["UpdateLookup"] = "UpdateLookup";
})(FullDocument = exports.FullDocument || (exports.FullDocument = {}));
var FunctionResponseType;
(function (FunctionResponseType) {
    FunctionResponseType["ReportBatchItemFailures"] = "ReportBatchItemFailures";
})(FunctionResponseType = exports.FunctionResponseType || (exports.FunctionResponseType = {}));
var EndPointType;
(function (EndPointType) {
    EndPointType["KAFKA_BOOTSTRAP_SERVERS"] = "KAFKA_BOOTSTRAP_SERVERS";
})(EndPointType = exports.EndPointType || (exports.EndPointType = {}));
var SourceAccessType;
(function (SourceAccessType) {
    SourceAccessType["BASIC_AUTH"] = "BASIC_AUTH";
    SourceAccessType["CLIENT_CERTIFICATE_TLS_AUTH"] = "CLIENT_CERTIFICATE_TLS_AUTH";
    SourceAccessType["SASL_SCRAM_256_AUTH"] = "SASL_SCRAM_256_AUTH";
    SourceAccessType["SASL_SCRAM_512_AUTH"] = "SASL_SCRAM_512_AUTH";
    SourceAccessType["SERVER_ROOT_CA_CERTIFICATE"] = "SERVER_ROOT_CA_CERTIFICATE";
    SourceAccessType["VIRTUAL_HOST"] = "VIRTUAL_HOST";
    SourceAccessType["VPC_SECURITY_GROUP"] = "VPC_SECURITY_GROUP";
    SourceAccessType["VPC_SUBNET"] = "VPC_SUBNET";
})(SourceAccessType = exports.SourceAccessType || (exports.SourceAccessType = {}));
var EventSourcePosition;
(function (EventSourcePosition) {
    EventSourcePosition["AT_TIMESTAMP"] = "AT_TIMESTAMP";
    EventSourcePosition["LATEST"] = "LATEST";
    EventSourcePosition["TRIM_HORIZON"] = "TRIM_HORIZON";
})(EventSourcePosition = exports.EventSourcePosition || (exports.EventSourcePosition = {}));
class CodeSigningConfigNotFoundException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "CodeSigningConfigNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "CodeSigningConfigNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CodeSigningConfigNotFoundException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.CodeSigningConfigNotFoundException = CodeSigningConfigNotFoundException;
class CodeStorageExceededException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "CodeStorageExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "CodeStorageExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CodeStorageExceededException.prototype);
        this.Type = opts.Type;
    }
}
exports.CodeStorageExceededException = CodeStorageExceededException;
class CodeVerificationFailedException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "CodeVerificationFailedException",
            $fault: "client",
            ...opts,
        });
        this.name = "CodeVerificationFailedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CodeVerificationFailedException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.CodeVerificationFailedException = CodeVerificationFailedException;
var PackageType;
(function (PackageType) {
    PackageType["Image"] = "Image";
    PackageType["Zip"] = "Zip";
})(PackageType = exports.PackageType || (exports.PackageType = {}));
var Runtime;
(function (Runtime) {
    Runtime["dotnet6"] = "dotnet6";
    Runtime["dotnetcore10"] = "dotnetcore1.0";
    Runtime["dotnetcore20"] = "dotnetcore2.0";
    Runtime["dotnetcore21"] = "dotnetcore2.1";
    Runtime["dotnetcore31"] = "dotnetcore3.1";
    Runtime["go1x"] = "go1.x";
    Runtime["java11"] = "java11";
    Runtime["java8"] = "java8";
    Runtime["java8al2"] = "java8.al2";
    Runtime["nodejs"] = "nodejs";
    Runtime["nodejs10x"] = "nodejs10.x";
    Runtime["nodejs12x"] = "nodejs12.x";
    Runtime["nodejs14x"] = "nodejs14.x";
    Runtime["nodejs16x"] = "nodejs16.x";
    Runtime["nodejs18x"] = "nodejs18.x";
    Runtime["nodejs43"] = "nodejs4.3";
    Runtime["nodejs43edge"] = "nodejs4.3-edge";
    Runtime["nodejs610"] = "nodejs6.10";
    Runtime["nodejs810"] = "nodejs8.10";
    Runtime["provided"] = "provided";
    Runtime["providedal2"] = "provided.al2";
    Runtime["python27"] = "python2.7";
    Runtime["python36"] = "python3.6";
    Runtime["python37"] = "python3.7";
    Runtime["python38"] = "python3.8";
    Runtime["python39"] = "python3.9";
    Runtime["ruby25"] = "ruby2.5";
    Runtime["ruby27"] = "ruby2.7";
})(Runtime = exports.Runtime || (exports.Runtime = {}));
var SnapStartApplyOn;
(function (SnapStartApplyOn) {
    SnapStartApplyOn["None"] = "None";
    SnapStartApplyOn["PublishedVersions"] = "PublishedVersions";
})(SnapStartApplyOn = exports.SnapStartApplyOn || (exports.SnapStartApplyOn = {}));
var TracingMode;
(function (TracingMode) {
    TracingMode["Active"] = "Active";
    TracingMode["PassThrough"] = "PassThrough";
})(TracingMode = exports.TracingMode || (exports.TracingMode = {}));
var LastUpdateStatus;
(function (LastUpdateStatus) {
    LastUpdateStatus["Failed"] = "Failed";
    LastUpdateStatus["InProgress"] = "InProgress";
    LastUpdateStatus["Successful"] = "Successful";
})(LastUpdateStatus = exports.LastUpdateStatus || (exports.LastUpdateStatus = {}));
var LastUpdateStatusReasonCode;
(function (LastUpdateStatusReasonCode) {
    LastUpdateStatusReasonCode["DisabledKMSKey"] = "DisabledKMSKey";
    LastUpdateStatusReasonCode["EFSIOError"] = "EFSIOError";
    LastUpdateStatusReasonCode["EFSMountConnectivityError"] = "EFSMountConnectivityError";
    LastUpdateStatusReasonCode["EFSMountFailure"] = "EFSMountFailure";
    LastUpdateStatusReasonCode["EFSMountTimeout"] = "EFSMountTimeout";
    LastUpdateStatusReasonCode["EniLimitExceeded"] = "EniLimitExceeded";
    LastUpdateStatusReasonCode["FunctionError"] = "FunctionError";
    LastUpdateStatusReasonCode["ImageAccessDenied"] = "ImageAccessDenied";
    LastUpdateStatusReasonCode["ImageDeleted"] = "ImageDeleted";
    LastUpdateStatusReasonCode["InsufficientRolePermissions"] = "InsufficientRolePermissions";
    LastUpdateStatusReasonCode["InternalError"] = "InternalError";
    LastUpdateStatusReasonCode["InvalidConfiguration"] = "InvalidConfiguration";
    LastUpdateStatusReasonCode["InvalidImage"] = "InvalidImage";
    LastUpdateStatusReasonCode["InvalidRuntime"] = "InvalidRuntime";
    LastUpdateStatusReasonCode["InvalidSecurityGroup"] = "InvalidSecurityGroup";
    LastUpdateStatusReasonCode["InvalidStateKMSKey"] = "InvalidStateKMSKey";
    LastUpdateStatusReasonCode["InvalidSubnet"] = "InvalidSubnet";
    LastUpdateStatusReasonCode["InvalidZipFileException"] = "InvalidZipFileException";
    LastUpdateStatusReasonCode["KMSKeyAccessDenied"] = "KMSKeyAccessDenied";
    LastUpdateStatusReasonCode["KMSKeyNotFound"] = "KMSKeyNotFound";
    LastUpdateStatusReasonCode["SubnetOutOfIPAddresses"] = "SubnetOutOfIPAddresses";
})(LastUpdateStatusReasonCode = exports.LastUpdateStatusReasonCode || (exports.LastUpdateStatusReasonCode = {}));
var SnapStartOptimizationStatus;
(function (SnapStartOptimizationStatus) {
    SnapStartOptimizationStatus["Off"] = "Off";
    SnapStartOptimizationStatus["On"] = "On";
})(SnapStartOptimizationStatus = exports.SnapStartOptimizationStatus || (exports.SnapStartOptimizationStatus = {}));
var State;
(function (State) {
    State["Active"] = "Active";
    State["Failed"] = "Failed";
    State["Inactive"] = "Inactive";
    State["Pending"] = "Pending";
})(State = exports.State || (exports.State = {}));
var StateReasonCode;
(function (StateReasonCode) {
    StateReasonCode["Creating"] = "Creating";
    StateReasonCode["DisabledKMSKey"] = "DisabledKMSKey";
    StateReasonCode["EFSIOError"] = "EFSIOError";
    StateReasonCode["EFSMountConnectivityError"] = "EFSMountConnectivityError";
    StateReasonCode["EFSMountFailure"] = "EFSMountFailure";
    StateReasonCode["EFSMountTimeout"] = "EFSMountTimeout";
    StateReasonCode["EniLimitExceeded"] = "EniLimitExceeded";
    StateReasonCode["FunctionError"] = "FunctionError";
    StateReasonCode["Idle"] = "Idle";
    StateReasonCode["ImageAccessDenied"] = "ImageAccessDenied";
    StateReasonCode["ImageDeleted"] = "ImageDeleted";
    StateReasonCode["InsufficientRolePermissions"] = "InsufficientRolePermissions";
    StateReasonCode["InternalError"] = "InternalError";
    StateReasonCode["InvalidConfiguration"] = "InvalidConfiguration";
    StateReasonCode["InvalidImage"] = "InvalidImage";
    StateReasonCode["InvalidRuntime"] = "InvalidRuntime";
    StateReasonCode["InvalidSecurityGroup"] = "InvalidSecurityGroup";
    StateReasonCode["InvalidStateKMSKey"] = "InvalidStateKMSKey";
    StateReasonCode["InvalidSubnet"] = "InvalidSubnet";
    StateReasonCode["InvalidZipFileException"] = "InvalidZipFileException";
    StateReasonCode["KMSKeyAccessDenied"] = "KMSKeyAccessDenied";
    StateReasonCode["KMSKeyNotFound"] = "KMSKeyNotFound";
    StateReasonCode["Restoring"] = "Restoring";
    StateReasonCode["SubnetOutOfIPAddresses"] = "SubnetOutOfIPAddresses";
})(StateReasonCode = exports.StateReasonCode || (exports.StateReasonCode = {}));
class InvalidCodeSignatureException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "InvalidCodeSignatureException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidCodeSignatureException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidCodeSignatureException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.InvalidCodeSignatureException = InvalidCodeSignatureException;
class ResourceInUseException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "ResourceInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceInUseException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.ResourceInUseException = ResourceInUseException;
var ProvisionedConcurrencyStatusEnum;
(function (ProvisionedConcurrencyStatusEnum) {
    ProvisionedConcurrencyStatusEnum["FAILED"] = "FAILED";
    ProvisionedConcurrencyStatusEnum["IN_PROGRESS"] = "IN_PROGRESS";
    ProvisionedConcurrencyStatusEnum["READY"] = "READY";
})(ProvisionedConcurrencyStatusEnum = exports.ProvisionedConcurrencyStatusEnum || (exports.ProvisionedConcurrencyStatusEnum = {}));
class ProvisionedConcurrencyConfigNotFoundException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "ProvisionedConcurrencyConfigNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ProvisionedConcurrencyConfigNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ProvisionedConcurrencyConfigNotFoundException.prototype);
        this.Type = opts.Type;
    }
}
exports.ProvisionedConcurrencyConfigNotFoundException = ProvisionedConcurrencyConfigNotFoundException;
var UpdateRuntimeOn;
(function (UpdateRuntimeOn) {
    UpdateRuntimeOn["Auto"] = "Auto";
    UpdateRuntimeOn["FunctionUpdate"] = "FunctionUpdate";
    UpdateRuntimeOn["Manual"] = "Manual";
})(UpdateRuntimeOn = exports.UpdateRuntimeOn || (exports.UpdateRuntimeOn = {}));
class EC2AccessDeniedException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "EC2AccessDeniedException",
            $fault: "server",
            ...opts,
        });
        this.name = "EC2AccessDeniedException";
        this.$fault = "server";
        Object.setPrototypeOf(this, EC2AccessDeniedException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.EC2AccessDeniedException = EC2AccessDeniedException;
class EC2ThrottledException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "EC2ThrottledException",
            $fault: "server",
            ...opts,
        });
        this.name = "EC2ThrottledException";
        this.$fault = "server";
        Object.setPrototypeOf(this, EC2ThrottledException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.EC2ThrottledException = EC2ThrottledException;
class EC2UnexpectedException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "EC2UnexpectedException",
            $fault: "server",
            ...opts,
        });
        this.name = "EC2UnexpectedException";
        this.$fault = "server";
        Object.setPrototypeOf(this, EC2UnexpectedException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
        this.EC2ErrorCode = opts.EC2ErrorCode;
    }
}
exports.EC2UnexpectedException = EC2UnexpectedException;
class EFSIOException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "EFSIOException",
            $fault: "client",
            ...opts,
        });
        this.name = "EFSIOException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EFSIOException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.EFSIOException = EFSIOException;
class EFSMountConnectivityException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "EFSMountConnectivityException",
            $fault: "client",
            ...opts,
        });
        this.name = "EFSMountConnectivityException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EFSMountConnectivityException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.EFSMountConnectivityException = EFSMountConnectivityException;
class EFSMountFailureException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "EFSMountFailureException",
            $fault: "client",
            ...opts,
        });
        this.name = "EFSMountFailureException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EFSMountFailureException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.EFSMountFailureException = EFSMountFailureException;
class EFSMountTimeoutException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "EFSMountTimeoutException",
            $fault: "client",
            ...opts,
        });
        this.name = "EFSMountTimeoutException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EFSMountTimeoutException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.EFSMountTimeoutException = EFSMountTimeoutException;
class ENILimitReachedException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "ENILimitReachedException",
            $fault: "server",
            ...opts,
        });
        this.name = "ENILimitReachedException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ENILimitReachedException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.ENILimitReachedException = ENILimitReachedException;
class InvalidRequestContentException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "InvalidRequestContentException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRequestContentException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRequestContentException.prototype);
        this.Type = opts.Type;
    }
}
exports.InvalidRequestContentException = InvalidRequestContentException;
class InvalidRuntimeException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "InvalidRuntimeException",
            $fault: "server",
            ...opts,
        });
        this.name = "InvalidRuntimeException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InvalidRuntimeException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.InvalidRuntimeException = InvalidRuntimeException;
class InvalidSecurityGroupIDException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "InvalidSecurityGroupIDException",
            $fault: "server",
            ...opts,
        });
        this.name = "InvalidSecurityGroupIDException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InvalidSecurityGroupIDException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.InvalidSecurityGroupIDException = InvalidSecurityGroupIDException;
class InvalidSubnetIDException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "InvalidSubnetIDException",
            $fault: "server",
            ...opts,
        });
        this.name = "InvalidSubnetIDException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InvalidSubnetIDException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.InvalidSubnetIDException = InvalidSubnetIDException;
class InvalidZipFileException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "InvalidZipFileException",
            $fault: "server",
            ...opts,
        });
        this.name = "InvalidZipFileException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InvalidZipFileException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.InvalidZipFileException = InvalidZipFileException;
var InvocationType;
(function (InvocationType) {
    InvocationType["DryRun"] = "DryRun";
    InvocationType["Event"] = "Event";
    InvocationType["RequestResponse"] = "RequestResponse";
})(InvocationType = exports.InvocationType || (exports.InvocationType = {}));
var LogType;
(function (LogType) {
    LogType["None"] = "None";
    LogType["Tail"] = "Tail";
})(LogType = exports.LogType || (exports.LogType = {}));
class KMSAccessDeniedException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "KMSAccessDeniedException",
            $fault: "server",
            ...opts,
        });
        this.name = "KMSAccessDeniedException";
        this.$fault = "server";
        Object.setPrototypeOf(this, KMSAccessDeniedException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.KMSAccessDeniedException = KMSAccessDeniedException;
class KMSDisabledException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "KMSDisabledException",
            $fault: "server",
            ...opts,
        });
        this.name = "KMSDisabledException";
        this.$fault = "server";
        Object.setPrototypeOf(this, KMSDisabledException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.KMSDisabledException = KMSDisabledException;
class KMSInvalidStateException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "KMSInvalidStateException",
            $fault: "server",
            ...opts,
        });
        this.name = "KMSInvalidStateException";
        this.$fault = "server";
        Object.setPrototypeOf(this, KMSInvalidStateException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.KMSInvalidStateException = KMSInvalidStateException;
class KMSNotFoundException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "KMSNotFoundException",
            $fault: "server",
            ...opts,
        });
        this.name = "KMSNotFoundException";
        this.$fault = "server";
        Object.setPrototypeOf(this, KMSNotFoundException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.KMSNotFoundException = KMSNotFoundException;
class RequestTooLargeException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "RequestTooLargeException",
            $fault: "client",
            ...opts,
        });
        this.name = "RequestTooLargeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RequestTooLargeException.prototype);
        this.Type = opts.Type;
    }
}
exports.RequestTooLargeException = RequestTooLargeException;
class ResourceNotReadyException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotReadyException",
            $fault: "server",
            ...opts,
        });
        this.name = "ResourceNotReadyException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ResourceNotReadyException.prototype);
        this.Type = opts.Type;
    }
}
exports.ResourceNotReadyException = ResourceNotReadyException;
class SnapStartException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "SnapStartException",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapStartException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapStartException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.SnapStartException = SnapStartException;
class SnapStartNotReadyException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "SnapStartNotReadyException",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapStartNotReadyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapStartNotReadyException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.SnapStartNotReadyException = SnapStartNotReadyException;
class SnapStartTimeoutException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "SnapStartTimeoutException",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapStartTimeoutException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapStartTimeoutException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.SnapStartTimeoutException = SnapStartTimeoutException;
class SubnetIPAddressLimitReachedException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "SubnetIPAddressLimitReachedException",
            $fault: "server",
            ...opts,
        });
        this.name = "SubnetIPAddressLimitReachedException";
        this.$fault = "server";
        Object.setPrototypeOf(this, SubnetIPAddressLimitReachedException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
exports.SubnetIPAddressLimitReachedException = SubnetIPAddressLimitReachedException;
class UnsupportedMediaTypeException extends LambdaServiceException_1.LambdaServiceException {
    constructor(opts) {
        super({
            name: "UnsupportedMediaTypeException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedMediaTypeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedMediaTypeException.prototype);
        this.Type = opts.Type;
    }
}
exports.UnsupportedMediaTypeException = UnsupportedMediaTypeException;
var FunctionVersion;
(function (FunctionVersion) {
    FunctionVersion["ALL"] = "ALL";
})(FunctionVersion = exports.FunctionVersion || (exports.FunctionVersion = {}));
const AccountLimitFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccountLimitFilterSensitiveLog = AccountLimitFilterSensitiveLog;
const AccountUsageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccountUsageFilterSensitiveLog = AccountUsageFilterSensitiveLog;
const AddLayerVersionPermissionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddLayerVersionPermissionRequestFilterSensitiveLog = AddLayerVersionPermissionRequestFilterSensitiveLog;
const AddLayerVersionPermissionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddLayerVersionPermissionResponseFilterSensitiveLog = AddLayerVersionPermissionResponseFilterSensitiveLog;
const AddPermissionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddPermissionRequestFilterSensitiveLog = AddPermissionRequestFilterSensitiveLog;
const AddPermissionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddPermissionResponseFilterSensitiveLog = AddPermissionResponseFilterSensitiveLog;
const AliasRoutingConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AliasRoutingConfigurationFilterSensitiveLog = AliasRoutingConfigurationFilterSensitiveLog;
const AliasConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AliasConfigurationFilterSensitiveLog = AliasConfigurationFilterSensitiveLog;
const AllowedPublishersFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AllowedPublishersFilterSensitiveLog = AllowedPublishersFilterSensitiveLog;
const AmazonManagedKafkaEventSourceConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AmazonManagedKafkaEventSourceConfigFilterSensitiveLog = AmazonManagedKafkaEventSourceConfigFilterSensitiveLog;
const CreateAliasRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateAliasRequestFilterSensitiveLog = CreateAliasRequestFilterSensitiveLog;
const CodeSigningPoliciesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CodeSigningPoliciesFilterSensitiveLog = CodeSigningPoliciesFilterSensitiveLog;
const CreateCodeSigningConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCodeSigningConfigRequestFilterSensitiveLog = CreateCodeSigningConfigRequestFilterSensitiveLog;
const CodeSigningConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CodeSigningConfigFilterSensitiveLog = CodeSigningConfigFilterSensitiveLog;
const CreateCodeSigningConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCodeSigningConfigResponseFilterSensitiveLog = CreateCodeSigningConfigResponseFilterSensitiveLog;
const OnFailureFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OnFailureFilterSensitiveLog = OnFailureFilterSensitiveLog;
const OnSuccessFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OnSuccessFilterSensitiveLog = OnSuccessFilterSensitiveLog;
const DestinationConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DestinationConfigFilterSensitiveLog = DestinationConfigFilterSensitiveLog;
const DocumentDBEventSourceConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DocumentDBEventSourceConfigFilterSensitiveLog = DocumentDBEventSourceConfigFilterSensitiveLog;
const FilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FilterFilterSensitiveLog = FilterFilterSensitiveLog;
const FilterCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FilterCriteriaFilterSensitiveLog = FilterCriteriaFilterSensitiveLog;
const ScalingConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ScalingConfigFilterSensitiveLog = ScalingConfigFilterSensitiveLog;
const SelfManagedEventSourceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SelfManagedEventSourceFilterSensitiveLog = SelfManagedEventSourceFilterSensitiveLog;
const SelfManagedKafkaEventSourceConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SelfManagedKafkaEventSourceConfigFilterSensitiveLog = SelfManagedKafkaEventSourceConfigFilterSensitiveLog;
const SourceAccessConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SourceAccessConfigurationFilterSensitiveLog = SourceAccessConfigurationFilterSensitiveLog;
const CreateEventSourceMappingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateEventSourceMappingRequestFilterSensitiveLog = CreateEventSourceMappingRequestFilterSensitiveLog;
const EventSourceMappingConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventSourceMappingConfigurationFilterSensitiveLog = EventSourceMappingConfigurationFilterSensitiveLog;
const FunctionCodeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ZipFile && { ZipFile: smithy_client_1.SENSITIVE_STRING }),
});
exports.FunctionCodeFilterSensitiveLog = FunctionCodeFilterSensitiveLog;
const DeadLetterConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeadLetterConfigFilterSensitiveLog = DeadLetterConfigFilterSensitiveLog;
const EnvironmentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Variables && { Variables: smithy_client_1.SENSITIVE_STRING }),
});
exports.EnvironmentFilterSensitiveLog = EnvironmentFilterSensitiveLog;
const EphemeralStorageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EphemeralStorageFilterSensitiveLog = EphemeralStorageFilterSensitiveLog;
const FileSystemConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FileSystemConfigFilterSensitiveLog = FileSystemConfigFilterSensitiveLog;
const ImageConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImageConfigFilterSensitiveLog = ImageConfigFilterSensitiveLog;
const SnapStartFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SnapStartFilterSensitiveLog = SnapStartFilterSensitiveLog;
const TracingConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TracingConfigFilterSensitiveLog = TracingConfigFilterSensitiveLog;
const VpcConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcConfigFilterSensitiveLog = VpcConfigFilterSensitiveLog;
const CreateFunctionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Code && { Code: (0, exports.FunctionCodeFilterSensitiveLog)(obj.Code) }),
    ...(obj.Environment && { Environment: (0, exports.EnvironmentFilterSensitiveLog)(obj.Environment) }),
});
exports.CreateFunctionRequestFilterSensitiveLog = CreateFunctionRequestFilterSensitiveLog;
const EnvironmentErrorFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Message && { Message: smithy_client_1.SENSITIVE_STRING }),
});
exports.EnvironmentErrorFilterSensitiveLog = EnvironmentErrorFilterSensitiveLog;
const EnvironmentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Variables && { Variables: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Error && { Error: (0, exports.EnvironmentErrorFilterSensitiveLog)(obj.Error) }),
});
exports.EnvironmentResponseFilterSensitiveLog = EnvironmentResponseFilterSensitiveLog;
const ImageConfigErrorFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Message && { Message: smithy_client_1.SENSITIVE_STRING }),
});
exports.ImageConfigErrorFilterSensitiveLog = ImageConfigErrorFilterSensitiveLog;
const ImageConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Error && { Error: (0, exports.ImageConfigErrorFilterSensitiveLog)(obj.Error) }),
});
exports.ImageConfigResponseFilterSensitiveLog = ImageConfigResponseFilterSensitiveLog;
const LayerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LayerFilterSensitiveLog = LayerFilterSensitiveLog;
const RuntimeVersionErrorFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Message && { Message: smithy_client_1.SENSITIVE_STRING }),
});
exports.RuntimeVersionErrorFilterSensitiveLog = RuntimeVersionErrorFilterSensitiveLog;
const RuntimeVersionConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Error && { Error: (0, exports.RuntimeVersionErrorFilterSensitiveLog)(obj.Error) }),
});
exports.RuntimeVersionConfigFilterSensitiveLog = RuntimeVersionConfigFilterSensitiveLog;
const SnapStartResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SnapStartResponseFilterSensitiveLog = SnapStartResponseFilterSensitiveLog;
const TracingConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TracingConfigResponseFilterSensitiveLog = TracingConfigResponseFilterSensitiveLog;
const VpcConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcConfigResponseFilterSensitiveLog = VpcConfigResponseFilterSensitiveLog;
const FunctionConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Environment && { Environment: (0, exports.EnvironmentResponseFilterSensitiveLog)(obj.Environment) }),
    ...(obj.ImageConfigResponse && {
        ImageConfigResponse: (0, exports.ImageConfigResponseFilterSensitiveLog)(obj.ImageConfigResponse),
    }),
    ...(obj.RuntimeVersionConfig && {
        RuntimeVersionConfig: (0, exports.RuntimeVersionConfigFilterSensitiveLog)(obj.RuntimeVersionConfig),
    }),
});
exports.FunctionConfigurationFilterSensitiveLog = FunctionConfigurationFilterSensitiveLog;
const CorsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CorsFilterSensitiveLog = CorsFilterSensitiveLog;
const CreateFunctionUrlConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateFunctionUrlConfigRequestFilterSensitiveLog = CreateFunctionUrlConfigRequestFilterSensitiveLog;
const CreateFunctionUrlConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateFunctionUrlConfigResponseFilterSensitiveLog = CreateFunctionUrlConfigResponseFilterSensitiveLog;
const DeleteAliasRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAliasRequestFilterSensitiveLog = DeleteAliasRequestFilterSensitiveLog;
const DeleteCodeSigningConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCodeSigningConfigRequestFilterSensitiveLog = DeleteCodeSigningConfigRequestFilterSensitiveLog;
const DeleteCodeSigningConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCodeSigningConfigResponseFilterSensitiveLog = DeleteCodeSigningConfigResponseFilterSensitiveLog;
const DeleteEventSourceMappingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteEventSourceMappingRequestFilterSensitiveLog = DeleteEventSourceMappingRequestFilterSensitiveLog;
const DeleteFunctionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFunctionRequestFilterSensitiveLog = DeleteFunctionRequestFilterSensitiveLog;
const DeleteFunctionCodeSigningConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFunctionCodeSigningConfigRequestFilterSensitiveLog = DeleteFunctionCodeSigningConfigRequestFilterSensitiveLog;
const DeleteFunctionConcurrencyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFunctionConcurrencyRequestFilterSensitiveLog = DeleteFunctionConcurrencyRequestFilterSensitiveLog;
const DeleteFunctionEventInvokeConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFunctionEventInvokeConfigRequestFilterSensitiveLog = DeleteFunctionEventInvokeConfigRequestFilterSensitiveLog;
const DeleteFunctionUrlConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFunctionUrlConfigRequestFilterSensitiveLog = DeleteFunctionUrlConfigRequestFilterSensitiveLog;
const DeleteLayerVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLayerVersionRequestFilterSensitiveLog = DeleteLayerVersionRequestFilterSensitiveLog;
const DeleteProvisionedConcurrencyConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteProvisionedConcurrencyConfigRequestFilterSensitiveLog = DeleteProvisionedConcurrencyConfigRequestFilterSensitiveLog;
const GetAccountSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetAccountSettingsRequestFilterSensitiveLog = GetAccountSettingsRequestFilterSensitiveLog;
const GetAccountSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetAccountSettingsResponseFilterSensitiveLog = GetAccountSettingsResponseFilterSensitiveLog;
const GetAliasRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetAliasRequestFilterSensitiveLog = GetAliasRequestFilterSensitiveLog;
const GetCodeSigningConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetCodeSigningConfigRequestFilterSensitiveLog = GetCodeSigningConfigRequestFilterSensitiveLog;
const GetCodeSigningConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetCodeSigningConfigResponseFilterSensitiveLog = GetCodeSigningConfigResponseFilterSensitiveLog;
const GetEventSourceMappingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetEventSourceMappingRequestFilterSensitiveLog = GetEventSourceMappingRequestFilterSensitiveLog;
const GetFunctionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetFunctionRequestFilterSensitiveLog = GetFunctionRequestFilterSensitiveLog;
const FunctionCodeLocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FunctionCodeLocationFilterSensitiveLog = FunctionCodeLocationFilterSensitiveLog;
const ConcurrencyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ConcurrencyFilterSensitiveLog = ConcurrencyFilterSensitiveLog;
const GetFunctionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Configuration && { Configuration: (0, exports.FunctionConfigurationFilterSensitiveLog)(obj.Configuration) }),
});
exports.GetFunctionResponseFilterSensitiveLog = GetFunctionResponseFilterSensitiveLog;
const GetFunctionCodeSigningConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetFunctionCodeSigningConfigRequestFilterSensitiveLog = GetFunctionCodeSigningConfigRequestFilterSensitiveLog;
const GetFunctionCodeSigningConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetFunctionCodeSigningConfigResponseFilterSensitiveLog = GetFunctionCodeSigningConfigResponseFilterSensitiveLog;
const GetFunctionConcurrencyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetFunctionConcurrencyRequestFilterSensitiveLog = GetFunctionConcurrencyRequestFilterSensitiveLog;
const GetFunctionConcurrencyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetFunctionConcurrencyResponseFilterSensitiveLog = GetFunctionConcurrencyResponseFilterSensitiveLog;
const GetFunctionConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetFunctionConfigurationRequestFilterSensitiveLog = GetFunctionConfigurationRequestFilterSensitiveLog;
const FunctionEventInvokeConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FunctionEventInvokeConfigFilterSensitiveLog = FunctionEventInvokeConfigFilterSensitiveLog;
const GetFunctionEventInvokeConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetFunctionEventInvokeConfigRequestFilterSensitiveLog = GetFunctionEventInvokeConfigRequestFilterSensitiveLog;
const GetFunctionUrlConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetFunctionUrlConfigRequestFilterSensitiveLog = GetFunctionUrlConfigRequestFilterSensitiveLog;
const GetFunctionUrlConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetFunctionUrlConfigResponseFilterSensitiveLog = GetFunctionUrlConfigResponseFilterSensitiveLog;
const GetLayerVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetLayerVersionRequestFilterSensitiveLog = GetLayerVersionRequestFilterSensitiveLog;
const LayerVersionContentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LayerVersionContentOutputFilterSensitiveLog = LayerVersionContentOutputFilterSensitiveLog;
const GetLayerVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetLayerVersionResponseFilterSensitiveLog = GetLayerVersionResponseFilterSensitiveLog;
const GetLayerVersionByArnRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetLayerVersionByArnRequestFilterSensitiveLog = GetLayerVersionByArnRequestFilterSensitiveLog;
const GetLayerVersionPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetLayerVersionPolicyRequestFilterSensitiveLog = GetLayerVersionPolicyRequestFilterSensitiveLog;
const GetLayerVersionPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetLayerVersionPolicyResponseFilterSensitiveLog = GetLayerVersionPolicyResponseFilterSensitiveLog;
const GetPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetPolicyRequestFilterSensitiveLog = GetPolicyRequestFilterSensitiveLog;
const GetPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetPolicyResponseFilterSensitiveLog = GetPolicyResponseFilterSensitiveLog;
const GetProvisionedConcurrencyConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetProvisionedConcurrencyConfigRequestFilterSensitiveLog = GetProvisionedConcurrencyConfigRequestFilterSensitiveLog;
const GetProvisionedConcurrencyConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetProvisionedConcurrencyConfigResponseFilterSensitiveLog = GetProvisionedConcurrencyConfigResponseFilterSensitiveLog;
const GetRuntimeManagementConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetRuntimeManagementConfigRequestFilterSensitiveLog = GetRuntimeManagementConfigRequestFilterSensitiveLog;
const GetRuntimeManagementConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetRuntimeManagementConfigResponseFilterSensitiveLog = GetRuntimeManagementConfigResponseFilterSensitiveLog;
const InvocationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Payload && { Payload: smithy_client_1.SENSITIVE_STRING }),
});
exports.InvocationRequestFilterSensitiveLog = InvocationRequestFilterSensitiveLog;
const InvocationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Payload && { Payload: smithy_client_1.SENSITIVE_STRING }),
});
exports.InvocationResponseFilterSensitiveLog = InvocationResponseFilterSensitiveLog;
const InvokeAsyncRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InvokeAsyncRequestFilterSensitiveLog = InvokeAsyncRequestFilterSensitiveLog;
const InvokeAsyncResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InvokeAsyncResponseFilterSensitiveLog = InvokeAsyncResponseFilterSensitiveLog;
const ListAliasesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListAliasesRequestFilterSensitiveLog = ListAliasesRequestFilterSensitiveLog;
const ListAliasesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListAliasesResponseFilterSensitiveLog = ListAliasesResponseFilterSensitiveLog;
const ListCodeSigningConfigsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListCodeSigningConfigsRequestFilterSensitiveLog = ListCodeSigningConfigsRequestFilterSensitiveLog;
const ListCodeSigningConfigsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListCodeSigningConfigsResponseFilterSensitiveLog = ListCodeSigningConfigsResponseFilterSensitiveLog;
const ListEventSourceMappingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListEventSourceMappingsRequestFilterSensitiveLog = ListEventSourceMappingsRequestFilterSensitiveLog;
const ListEventSourceMappingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListEventSourceMappingsResponseFilterSensitiveLog = ListEventSourceMappingsResponseFilterSensitiveLog;
const ListFunctionEventInvokeConfigsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListFunctionEventInvokeConfigsRequestFilterSensitiveLog = ListFunctionEventInvokeConfigsRequestFilterSensitiveLog;
const ListFunctionEventInvokeConfigsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListFunctionEventInvokeConfigsResponseFilterSensitiveLog = ListFunctionEventInvokeConfigsResponseFilterSensitiveLog;
const ListFunctionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListFunctionsRequestFilterSensitiveLog = ListFunctionsRequestFilterSensitiveLog;
const ListFunctionsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Functions && { Functions: obj.Functions.map((item) => (0, exports.FunctionConfigurationFilterSensitiveLog)(item)) }),
});
exports.ListFunctionsResponseFilterSensitiveLog = ListFunctionsResponseFilterSensitiveLog;
const ListFunctionsByCodeSigningConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListFunctionsByCodeSigningConfigRequestFilterSensitiveLog = ListFunctionsByCodeSigningConfigRequestFilterSensitiveLog;
const ListFunctionsByCodeSigningConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListFunctionsByCodeSigningConfigResponseFilterSensitiveLog = ListFunctionsByCodeSigningConfigResponseFilterSensitiveLog;
const ListFunctionUrlConfigsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListFunctionUrlConfigsRequestFilterSensitiveLog = ListFunctionUrlConfigsRequestFilterSensitiveLog;
const FunctionUrlConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FunctionUrlConfigFilterSensitiveLog = FunctionUrlConfigFilterSensitiveLog;
const ListFunctionUrlConfigsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListFunctionUrlConfigsResponseFilterSensitiveLog = ListFunctionUrlConfigsResponseFilterSensitiveLog;
const ListLayersRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListLayersRequestFilterSensitiveLog = ListLayersRequestFilterSensitiveLog;
const LayerVersionsListItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LayerVersionsListItemFilterSensitiveLog = LayerVersionsListItemFilterSensitiveLog;
const LayersListItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LayersListItemFilterSensitiveLog = LayersListItemFilterSensitiveLog;
const ListLayersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListLayersResponseFilterSensitiveLog = ListLayersResponseFilterSensitiveLog;
const ListLayerVersionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListLayerVersionsRequestFilterSensitiveLog = ListLayerVersionsRequestFilterSensitiveLog;
const ListLayerVersionsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListLayerVersionsResponseFilterSensitiveLog = ListLayerVersionsResponseFilterSensitiveLog;
const ListProvisionedConcurrencyConfigsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListProvisionedConcurrencyConfigsRequestFilterSensitiveLog = ListProvisionedConcurrencyConfigsRequestFilterSensitiveLog;
const ProvisionedConcurrencyConfigListItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ProvisionedConcurrencyConfigListItemFilterSensitiveLog = ProvisionedConcurrencyConfigListItemFilterSensitiveLog;
const ListProvisionedConcurrencyConfigsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListProvisionedConcurrencyConfigsResponseFilterSensitiveLog = ListProvisionedConcurrencyConfigsResponseFilterSensitiveLog;
const ListTagsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsRequestFilterSensitiveLog = ListTagsRequestFilterSensitiveLog;
const ListTagsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsResponseFilterSensitiveLog = ListTagsResponseFilterSensitiveLog;
const ListVersionsByFunctionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListVersionsByFunctionRequestFilterSensitiveLog = ListVersionsByFunctionRequestFilterSensitiveLog;
const ListVersionsByFunctionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Versions && { Versions: obj.Versions.map((item) => (0, exports.FunctionConfigurationFilterSensitiveLog)(item)) }),
});
exports.ListVersionsByFunctionResponseFilterSensitiveLog = ListVersionsByFunctionResponseFilterSensitiveLog;
const LayerVersionContentInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ZipFile && { ZipFile: smithy_client_1.SENSITIVE_STRING }),
});
exports.LayerVersionContentInputFilterSensitiveLog = LayerVersionContentInputFilterSensitiveLog;
const PublishLayerVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Content && { Content: (0, exports.LayerVersionContentInputFilterSensitiveLog)(obj.Content) }),
});
exports.PublishLayerVersionRequestFilterSensitiveLog = PublishLayerVersionRequestFilterSensitiveLog;
const PublishLayerVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PublishLayerVersionResponseFilterSensitiveLog = PublishLayerVersionResponseFilterSensitiveLog;
const PublishVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PublishVersionRequestFilterSensitiveLog = PublishVersionRequestFilterSensitiveLog;
const PutFunctionCodeSigningConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutFunctionCodeSigningConfigRequestFilterSensitiveLog = PutFunctionCodeSigningConfigRequestFilterSensitiveLog;
const PutFunctionCodeSigningConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutFunctionCodeSigningConfigResponseFilterSensitiveLog = PutFunctionCodeSigningConfigResponseFilterSensitiveLog;
const PutFunctionConcurrencyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutFunctionConcurrencyRequestFilterSensitiveLog = PutFunctionConcurrencyRequestFilterSensitiveLog;
const PutFunctionEventInvokeConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutFunctionEventInvokeConfigRequestFilterSensitiveLog = PutFunctionEventInvokeConfigRequestFilterSensitiveLog;
const PutProvisionedConcurrencyConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutProvisionedConcurrencyConfigRequestFilterSensitiveLog = PutProvisionedConcurrencyConfigRequestFilterSensitiveLog;
const PutProvisionedConcurrencyConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutProvisionedConcurrencyConfigResponseFilterSensitiveLog = PutProvisionedConcurrencyConfigResponseFilterSensitiveLog;
const PutRuntimeManagementConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutRuntimeManagementConfigRequestFilterSensitiveLog = PutRuntimeManagementConfigRequestFilterSensitiveLog;
const PutRuntimeManagementConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutRuntimeManagementConfigResponseFilterSensitiveLog = PutRuntimeManagementConfigResponseFilterSensitiveLog;
const RemoveLayerVersionPermissionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RemoveLayerVersionPermissionRequestFilterSensitiveLog = RemoveLayerVersionPermissionRequestFilterSensitiveLog;
const RemovePermissionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RemovePermissionRequestFilterSensitiveLog = RemovePermissionRequestFilterSensitiveLog;
const TagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagResourceRequestFilterSensitiveLog = TagResourceRequestFilterSensitiveLog;
const UntagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UntagResourceRequestFilterSensitiveLog = UntagResourceRequestFilterSensitiveLog;
const UpdateAliasRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateAliasRequestFilterSensitiveLog = UpdateAliasRequestFilterSensitiveLog;
const UpdateCodeSigningConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateCodeSigningConfigRequestFilterSensitiveLog = UpdateCodeSigningConfigRequestFilterSensitiveLog;
const UpdateCodeSigningConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateCodeSigningConfigResponseFilterSensitiveLog = UpdateCodeSigningConfigResponseFilterSensitiveLog;
const UpdateEventSourceMappingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateEventSourceMappingRequestFilterSensitiveLog = UpdateEventSourceMappingRequestFilterSensitiveLog;
const UpdateFunctionCodeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ZipFile && { ZipFile: smithy_client_1.SENSITIVE_STRING }),
});
exports.UpdateFunctionCodeRequestFilterSensitiveLog = UpdateFunctionCodeRequestFilterSensitiveLog;
const UpdateFunctionConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Environment && { Environment: (0, exports.EnvironmentFilterSensitiveLog)(obj.Environment) }),
});
exports.UpdateFunctionConfigurationRequestFilterSensitiveLog = UpdateFunctionConfigurationRequestFilterSensitiveLog;
const UpdateFunctionEventInvokeConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateFunctionEventInvokeConfigRequestFilterSensitiveLog = UpdateFunctionEventInvokeConfigRequestFilterSensitiveLog;
const UpdateFunctionUrlConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateFunctionUrlConfigRequestFilterSensitiveLog = UpdateFunctionUrlConfigRequestFilterSensitiveLog;
const UpdateFunctionUrlConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateFunctionUrlConfigResponseFilterSensitiveLog = UpdateFunctionUrlConfigResponseFilterSensitiveLog;
