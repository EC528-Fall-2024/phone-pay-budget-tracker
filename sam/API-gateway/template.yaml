AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS SAM template to simulate API Gateway with multiple microservices locally.

Globals:
  Function:
    Timeout: 10
    MemorySize: 128
    Runtime: nodejs20.x

Resources:
  AdminControlFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../microservices/Admin-Control/
      Handler: app.lambda_handler
      Events:
        AdminControlApi:
          Type: Api
          Properties:
            Path: /admin-control
            Method: ANY

  AuthenticationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../microservices/Authentication/
      Handler: app.lambda_handler
      Events:
        AuthenticationApi:
          Type: Api
          Properties:
            Path: /authentication
            Method: ANY

  NotificationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../microservices/Notifications/
      Handler: app.lambda_handler
      Events:
        NotificationsApi:
          Type: Api
          Properties:
            Path: /notifications
            Method: ANY

  TransDataAnalysisFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../microservices/Trans-DataAnalysis/
      Handler: app.lambda_handler
      Events:
        TransDataAnalysisApi:
          Type: Api
          Properties:
            Path: /trans-dataanalysis
            Method: ANY

  # Plaid Lambda function for handling link token creation
  PlaidFunctionCreateLinkToken:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../microservices/Trans-DataAnalysis/plaid/create_link_token/
      Handler: app.lambda_handler  # Adjust the handler to match the function name in create_link_token/app.js
      Events:
        CreateLinkTokenApi:
          Type: Api
          Properties:
            Path: /trans-dataanalysis/plaid/create_link_token
            Method: POST
      Environment:
        Variables:
          PLAID_CLIENT_ID: !Ref PlaidClientId
          PLAID_SECRET: !Ref PlaidSecret

  # Plaid Lambda function for handling transaction fetching
  PlaidFunctionGetTransactions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../microservices/Trans-DataAnalysis/plaid/get_transactions/
      Handler: app.lambda_handler  # Adjust the handler to match the function name in get_transactions/app.js
      Events:
        GetTransactionsApi:
          Type: Api
          Properties:
            Path: /trans-dataanalysis/plaid/get_transactions
            Method: POST
      Environment:
        Variables:
          PLAID_CLIENT_ID: !Ref PlaidClientId
          PLAID_SECRET: !Ref PlaidSecret

  UserProfileFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../microservices/User-Profile/
      Handler: app.lambda_handler
      Events:
        UserProfileApi:
          Type: Api
          Properties:
            Path: /user-profile
            Method: GET

  # New Lambda function for updating the user profile
  UserProfilePutFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../microservices/User-Profile/
      Handler: app.lambda_handler_setProfile  # Reference to your new lambda handler
      Events:
        UserProfilePutApi:
          Type: Api
          Properties:
            Path: /user-profile
            Method: POST  # Specify that this Lambda handles POST requests

Parameters:
  PlaidClientId:
    Type: String
    Description: Plaid Client ID

  PlaidSecret:
    Type: String
    Description: Plaid Secret

Outputs:
  CreateLinkTokenApi:
    Description: API Gateway endpoint URL for creating a Plaid link token
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/trans-dataanalysis/plaid/create_link_token'
  
  GetTransactionsApi:
    Description: API Gateway endpoint URL for fetching Plaid transactions
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/trans-dataanalysis/plaid/get_transactions'
